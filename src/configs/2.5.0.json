[{"id":1,"children":[{"type":"string","enum":["2.5.0"],"description":"The AsyncAPI specification version of this document.","parent":1,"name":"asyncapi","id":"677644","children":[]},{"type":"string","description":"A unique id representing the application.","format":"uri","parent":1,"name":"id","id":"481098","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/info.json","parent":1,"name":"info","id":"908504","children":[{"type":"string","description":"A unique and precise title of the API.","parent":"908504","name":"title","id":"701171","children":[]},{"type":"string","description":"A semantic version number of the API.","parent":"908504","name":"version","id":"218301","children":[]},{"type":"string","description":"A longer description of the API. Should be different from the title. CommonMark is allowed.","parent":"908504","name":"description","id":"375210","children":[]},{"type":"string","description":"A URL to the Terms of Service for the API. MUST be in the format of a URL.","format":"uri","parent":"908504","name":"termsOfService","id":"108154","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/contact.json","parent":"908504","name":"contact","id":"547642","children":[{"type":"string","description":"The identifying name of the contact person/organization.","parent":"547642","name":"name","id":"931623","children":[]},{"type":"string","description":"The URL pointing to the contact information.","format":"uri","parent":"547642","name":"url","id":"419177","children":[]},{"type":"string","description":"The email address of the contact person/organization.","format":"email","parent":"547642","name":"email","id":"764648","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"547642","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"441383","children":[]}],"description":{"raw":"Contact information for the exposed API.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. This MUST be in the form of an absolute URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Contact Object Example:":{"raw":"```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"https://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: https://www.example.com/support\nemail: support@example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/license.json","parent":"908504","name":"license","id":"23019","children":[{"type":"string","description":"The name of the license type. It's encouraged to use an OSI compatible license.","parent":"23019","name":"name","id":"718848","children":[]},{"type":"string","description":"The URL pointing to the license.","format":"uri","parent":"23019","name":"url","id":"433790","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"23019","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"682425","children":[]}],"description":{"raw":"License information for the exposed API.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **REQUIRED.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"License Object Example:":{"raw":"```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: https://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"908504","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"985327","children":[]}],"description":{"raw":"The object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **REQUIRED.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **REQUIRED** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. This MUST be in the form of an absolute URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Info Object Example:":{"raw":"```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"https://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"https://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: https://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: https://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: https://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/servers.json","parent":1,"name":"servers","id":"563512","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"563512","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"39660","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"39660","name":"$ref","id":"755342","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/server.json","parent":"563512","name":"server","description":{"raw":"An object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`, `googlepubsub`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)]] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of servers.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Server Object Example":{"raw":"A single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:development\",\n          \"description\": \"This environment is meant for developers to run their own tests\"\n        }\n      ]\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:staging\",\n          \"description\": \"This environment is a replica of the production environment\"\n        }\n      ]\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:production\",\n          \"description\": \"This environment is the live environment available for final users\"\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:development\"\n        description: \"This environment is meant for developers to run their own tests\"\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:staging\"\n        description: \"This environment is a replica of the production environment\"\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:production\"\n        description: \"This environment is the live environment available for final users\"\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n"}},"id":"903268","children":[{"type":"string","parent":"903268","name":"url","id":"411465","children":[]},{"type":"string","parent":"903268","name":"description","id":"903792","children":[]},{"type":"string","description":"The transfer protocol.","parent":"903268","name":"protocol","id":"841806","children":[]},{"type":"string","parent":"903268","name":"protocolVersion","id":"293130","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/serverVariables.json","parent":"903268","name":"variables","id":"84731","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"84731","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"920582","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"920582","name":"$ref","id":"330611","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/serverVariable.json","parent":"84731","name":"serverVariable","id":"88571","children":[{"type":"string","uniqueItems":true,"parent":"88571","name":"enum","id":"556956","children":[]},{"type":"string","parent":"88571","name":"default","id":"648975","children":[]},{"type":"string","parent":"88571","name":"description","id":"924805","children":[]},{"type":"string","parent":"88571","name":"examples","id":"537979","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"88571","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"570707","children":[]}]}]},{"type":"array","parent":"903268","name":"security","id":"13129","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"13129","name":"array","id":"354408","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"903268","name":"bindings","id":"959251","children":[{"parent":"959251","name":"http","id":"818556","children":[]},{"parent":"959251","name":"ws","id":"157494","children":[]},{"parent":"959251","name":"amqp","id":"17952","children":[]},{"parent":"959251","name":"amqp1","id":"358291","children":[]},{"parent":"959251","name":"mqtt","id":"638913","children":[]},{"parent":"959251","name":"mqtt5","id":"270782","children":[]},{"parent":"959251","name":"kafka","id":"217354","children":[]},{"parent":"959251","name":"anypointmq","id":"975774","children":[]},{"parent":"959251","name":"nats","id":"897338","children":[]},{"parent":"959251","name":"jms","id":"830502","children":[]},{"parent":"959251","name":"sns","id":"181545","children":[]},{"parent":"959251","name":"sqs","id":"588953","children":[]},{"parent":"959251","name":"stomp","id":"275090","children":[]},{"parent":"959251","name":"redis","id":"369154","children":[]},{"parent":"959251","name":"ibmmq","id":"524980","children":[]},{"parent":"959251","name":"solace","id":"188472","children":[]}]},{"type":"array","uniqueItems":true,"parent":"903268","name":"tags","id":"519773","children":[{"type":"string","parent":"519773","name":"name","id":"346022","children":[]},{"type":"string","parent":"519773","name":"description","id":"488621","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"519773","name":"externalDocs","id":"586938","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"519773","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"499225","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"903268","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"206998","children":[]}]}],"description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}}},{"type":"string","parent":1,"name":"defaultContentType","id":"284271","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/channels.json","parent":1,"name":"channels","id":"282245","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"282245","name":"$ref","id":"155219","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/parameters.json","parent":"282245","name":"parameters","id":"322119","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"322119","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"697029","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"697029","name":"$ref","id":"954985","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/parameter.json","parent":"322119","name":"parameter","description":{"raw":"Describes a parameter included in a channel name.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Parameter Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}},"id":"433868","children":[{"type":"string","description":"A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.","parent":"433868","name":"description","id":"354897","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json","parent":"433868","name":"schema","id":"522836","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"522836","name":"schema#","id":"11974","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"533563","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"522836","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"383245","name":"additionalProperties","parent":"522836","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"575182","name":"items","parent":"522836","children":[]},{"type":"array","minItems":1,"id":"805772","name":"allOf","parent":"522836","$ref":"http://asyncapi.com/definitions/2.5.0/schema.json","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"805772","name":"schema#","id":"634179","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"115075","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"805772","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"654462","name":"additionalProperties","parent":"805772","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"335747","name":"items","parent":"805772","children":[]},{"type":"array","minItems":1,"id":"618243","name":"allOf","parent":"805772","children":[]},{"type":"array","minItems":1,"id":"340847","name":"oneOf","parent":"805772","children":[]},{"type":"array","minItems":1,"id":"930636","name":"anyOf","parent":"805772","children":[]},{"id":"379846","name":"not","parent":"805772","children":[]},{"type":"object","default":{},"id":"691403","name":"properties","parent":"805772","children":[]},{"type":"object","default":{},"id":"449274","name":"patternProperties","parent":"805772","children":[]},{"id":"883093","name":"propertyNames","parent":"805772","children":[]},{"id":"262819","name":"contains","parent":"805772","children":[]},{"type":"string","id":"142712","name":"discriminator","parent":"805772","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"497175","name":"externalDocs","parent":"805772","children":[{"type":"string","parent":"497175","name":"description","id":"221026","children":[]},{"type":"string","format":"uri","parent":"497175","name":"url","id":"560821","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"497175","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"112103","children":[]}]},{"type":"boolean","default":false,"id":"640668","name":"deprecated","parent":"805772","children":[]}]},{"type":"array","minItems":1,"id":"862673","name":"oneOf","parent":"522836","$ref":"http://asyncapi.com/definitions/2.5.0/schema.json","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"862673","name":"schema#","id":"88520","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"297299","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"862673","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"318669","name":"additionalProperties","parent":"862673","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"897401","name":"items","parent":"862673","children":[]},{"type":"array","minItems":1,"id":"584714","name":"allOf","parent":"862673","children":[]},{"type":"array","minItems":1,"id":"621232","name":"oneOf","parent":"862673","children":[]},{"type":"array","minItems":1,"id":"79604","name":"anyOf","parent":"862673","children":[]},{"id":"898239","name":"not","parent":"862673","children":[]},{"type":"object","default":{},"id":"347979","name":"properties","parent":"862673","children":[]},{"type":"object","default":{},"id":"827738","name":"patternProperties","parent":"862673","children":[]},{"id":"368580","name":"propertyNames","parent":"862673","children":[]},{"id":"766475","name":"contains","parent":"862673","children":[]},{"type":"string","id":"924557","name":"discriminator","parent":"862673","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"677874","name":"externalDocs","parent":"862673","children":[{"type":"string","parent":"677874","name":"description","id":"222866","children":[]},{"type":"string","format":"uri","parent":"677874","name":"url","id":"129761","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"677874","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"950068","children":[]}]},{"type":"boolean","default":false,"id":"508686","name":"deprecated","parent":"862673","children":[]}]},{"type":"array","minItems":1,"id":"939023","name":"anyOf","parent":"522836","$ref":"http://asyncapi.com/definitions/2.5.0/schema.json","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"939023","name":"schema#","id":"555009","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"140154","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"939023","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"304872","name":"additionalProperties","parent":"939023","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"719123","name":"items","parent":"939023","children":[]},{"type":"array","minItems":1,"id":"284653","name":"allOf","parent":"939023","children":[]},{"type":"array","minItems":1,"id":"679655","name":"oneOf","parent":"939023","children":[]},{"type":"array","minItems":1,"id":"369472","name":"anyOf","parent":"939023","children":[]},{"id":"39814","name":"not","parent":"939023","children":[]},{"type":"object","default":{},"id":"417315","name":"properties","parent":"939023","children":[]},{"type":"object","default":{},"id":"961858","name":"patternProperties","parent":"939023","children":[]},{"id":"477774","name":"propertyNames","parent":"939023","children":[]},{"id":"648757","name":"contains","parent":"939023","children":[]},{"type":"string","id":"669094","name":"discriminator","parent":"939023","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"345931","name":"externalDocs","parent":"939023","children":[{"type":"string","parent":"345931","name":"description","id":"253387","children":[]},{"type":"string","format":"uri","parent":"345931","name":"url","id":"5828","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"345931","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"389468","children":[]}]},{"type":"boolean","default":false,"id":"195336","name":"deprecated","parent":"939023","children":[]}]},{"id":"533664","name":"not","parent":"522836","children":[]},{"type":"object","default":{},"id":"988141","name":"properties","parent":"522836","children":[]},{"type":"object","default":{},"id":"231225","name":"patternProperties","parent":"522836","children":[]},{"id":"417527","name":"propertyNames","parent":"522836","children":[]},{"id":"151111","name":"contains","parent":"522836","children":[]},{"type":"string","id":"944987","name":"discriminator","parent":"522836","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"120343","name":"externalDocs","parent":"522836","children":[{"type":"string","parent":"120343","name":"description","id":"42043","children":[]},{"type":"string","format":"uri","parent":"120343","name":"url","id":"73440","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"120343","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"433715","children":[]}]},{"type":"boolean","default":false,"id":"283600","name":"deprecated","parent":"522836","children":[]}],"description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"type":"string","description":"A runtime expression that specifies the location of the parameter value","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"433868","name":"location","id":"360127","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"433868","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"878428","children":[]}]}],"description":{"raw":"Describes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n"},"Parameters Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n"}}},{"type":"string","description":"A description of the channel.","parent":"282245","name":"description","id":"722958","children":[]},{"type":"string","description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}},"uniqueItems":true,"parent":"282245","name":"servers","id":"881752","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operation.json","parent":"282245","name":"publish","id":"127462","children":[{"type":"array","parent":"127462","name":"traits","id":"185932","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"185932","name":"Reference","id":"824067","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"824067","name":"$ref","id":"79753","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"185932","name":"operationTrait","id":"961497","children":[{"type":"string","parent":"961497","name":"summary","id":"999854","children":[]},{"type":"string","parent":"961497","name":"description","id":"985704","children":[]},{"type":"array","uniqueItems":true,"parent":"961497","name":"tags","id":"235863","children":[{"type":"string","parent":"235863","name":"name","id":"620312","children":[]},{"type":"string","parent":"235863","name":"description","id":"20725","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"235863","name":"externalDocs","id":"188465","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"235863","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"393005","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"961497","name":"externalDocs","id":"980355","children":[{"type":"string","parent":"980355","name":"description","id":"60208","children":[]},{"type":"string","format":"uri","parent":"980355","name":"url","id":"730038","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"980355","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"463533","children":[]}]},{"type":"string","parent":"961497","name":"operationId","id":"85872","children":[]},{"type":"array","parent":"961497","name":"security","id":"845273","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"845273","name":"array","id":"884186","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"961497","name":"bindings","id":"508521","children":[{"parent":"508521","name":"http","id":"980496","children":[]},{"parent":"508521","name":"ws","id":"637982","children":[]},{"parent":"508521","name":"amqp","id":"611905","children":[]},{"parent":"508521","name":"amqp1","id":"247907","children":[]},{"parent":"508521","name":"mqtt","id":"648683","children":[]},{"parent":"508521","name":"mqtt5","id":"472005","children":[]},{"parent":"508521","name":"kafka","id":"545578","children":[]},{"parent":"508521","name":"anypointmq","id":"557208","children":[]},{"parent":"508521","name":"nats","id":"763750","children":[]},{"parent":"508521","name":"jms","id":"57943","children":[]},{"parent":"508521","name":"sns","id":"912054","children":[]},{"parent":"508521","name":"sqs","id":"900064","children":[]},{"parent":"508521","name":"stomp","id":"69751","children":[]},{"parent":"508521","name":"redis","id":"900853","children":[]},{"parent":"508521","name":"ibmmq","id":"782482","children":[]},{"parent":"508521","name":"solace","id":"450470","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"961497","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"619701","children":[]}]}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"287037","name":"Reference","id":"437906","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"437906","name":"$ref","id":"959106","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"287037","name":"operationTrait","id":"249414","children":[{"type":"string","parent":"249414","name":"summary","id":"262960","children":[]},{"type":"string","parent":"249414","name":"description","id":"282000","children":[]},{"type":"array","uniqueItems":true,"parent":"249414","name":"tags","id":"999993","children":[{"type":"string","parent":"999993","name":"name","id":"247155","children":[]},{"type":"string","parent":"999993","name":"description","id":"758784","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"999993","name":"externalDocs","id":"703213","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"999993","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"31357","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"249414","name":"externalDocs","id":"401965","children":[{"type":"string","parent":"401965","name":"description","id":"984313","children":[]},{"type":"string","format":"uri","parent":"401965","name":"url","id":"753428","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"401965","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"277020","children":[]}]},{"type":"string","parent":"249414","name":"operationId","id":"363639","children":[]},{"type":"array","parent":"249414","name":"security","id":"599381","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"599381","name":"array","id":"993003","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"249414","name":"bindings","id":"496273","children":[{"parent":"496273","name":"http","id":"429417","children":[]},{"parent":"496273","name":"ws","id":"377237","children":[]},{"parent":"496273","name":"amqp","id":"59676","children":[]},{"parent":"496273","name":"amqp1","id":"846072","children":[]},{"parent":"496273","name":"mqtt","id":"931229","children":[]},{"parent":"496273","name":"mqtt5","id":"702452","children":[]},{"parent":"496273","name":"kafka","id":"205497","children":[]},{"parent":"496273","name":"anypointmq","id":"984467","children":[]},{"parent":"496273","name":"nats","id":"531859","children":[]},{"parent":"496273","name":"jms","id":"215153","children":[]},{"parent":"496273","name":"sns","id":"568484","children":[]},{"parent":"496273","name":"sqs","id":"563614","children":[]},{"parent":"496273","name":"stomp","id":"619740","children":[]},{"parent":"496273","name":"redis","id":"791342","children":[]},{"parent":"496273","name":"ibmmq","id":"689077","children":[]},{"parent":"496273","name":"solace","id":"539929","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"249414","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"779324","children":[]}]}]},{"type":"string","parent":"127462","name":"summary","id":"542459","children":[]},{"type":"string","parent":"127462","name":"description","id":"261063","children":[]},{"type":"array","parent":"127462","name":"security","id":"362640","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"362640","name":"array","id":"336309","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"type":"array","uniqueItems":true,"parent":"127462","name":"tags","id":"114975","children":[{"type":"string","parent":"114975","name":"name","id":"327922","children":[]},{"type":"string","parent":"114975","name":"description","id":"212572","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"114975","name":"externalDocs","id":"852160","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"114975","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"345113","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"127462","name":"externalDocs","id":"901059","children":[{"type":"string","parent":"901059","name":"description","id":"715897","children":[]},{"type":"string","format":"uri","parent":"901059","name":"url","id":"191771","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"901059","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"805039","children":[]}]},{"type":"string","parent":"127462","name":"operationId","id":"507111","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"127462","name":"bindings","id":"144656","children":[{"parent":"144656","name":"http","id":"548109","children":[]},{"parent":"144656","name":"ws","id":"252461","children":[]},{"parent":"144656","name":"amqp","id":"973413","children":[]},{"parent":"144656","name":"amqp1","id":"190918","children":[]},{"parent":"144656","name":"mqtt","id":"454608","children":[]},{"parent":"144656","name":"mqtt5","id":"616045","children":[]},{"parent":"144656","name":"kafka","id":"165295","children":[]},{"parent":"144656","name":"anypointmq","id":"433308","children":[]},{"parent":"144656","name":"nats","id":"467469","children":[]},{"parent":"144656","name":"jms","id":"315556","children":[]},{"parent":"144656","name":"sns","id":"955122","children":[]},{"parent":"144656","name":"sqs","id":"945160","children":[]},{"parent":"144656","name":"stomp","id":"88252","children":[]},{"parent":"144656","name":"redis","id":"157432","children":[]},{"parent":"144656","name":"ibmmq","id":"98703","children":[]},{"parent":"144656","name":"solace","id":"870422","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/message.json","parent":"127462","name":"message","id":"698552","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"698552","name":"Reference","id":"254568","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"254568","name":"$ref","id":"652659","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"127462","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"531152","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operation.json","parent":"282245","name":"subscribe","id":"485213","children":[{"type":"array","parent":"485213","name":"traits","id":"207797","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"207797","name":"Reference","id":"639574","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"639574","name":"$ref","id":"499705","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"207797","name":"operationTrait","id":"908769","children":[{"type":"string","parent":"908769","name":"summary","id":"70826","children":[]},{"type":"string","parent":"908769","name":"description","id":"700902","children":[]},{"type":"array","uniqueItems":true,"parent":"908769","name":"tags","id":"937514","children":[{"type":"string","parent":"937514","name":"name","id":"410765","children":[]},{"type":"string","parent":"937514","name":"description","id":"430001","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"937514","name":"externalDocs","id":"958988","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"937514","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"536788","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"908769","name":"externalDocs","id":"797910","children":[{"type":"string","parent":"797910","name":"description","id":"537168","children":[]},{"type":"string","format":"uri","parent":"797910","name":"url","id":"155345","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"797910","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"888278","children":[]}]},{"type":"string","parent":"908769","name":"operationId","id":"637618","children":[]},{"type":"array","parent":"908769","name":"security","id":"339209","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"339209","name":"array","id":"637018","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"908769","name":"bindings","id":"652273","children":[{"parent":"652273","name":"http","id":"107129","children":[]},{"parent":"652273","name":"ws","id":"67233","children":[]},{"parent":"652273","name":"amqp","id":"858377","children":[]},{"parent":"652273","name":"amqp1","id":"211984","children":[]},{"parent":"652273","name":"mqtt","id":"695138","children":[]},{"parent":"652273","name":"mqtt5","id":"98297","children":[]},{"parent":"652273","name":"kafka","id":"752684","children":[]},{"parent":"652273","name":"anypointmq","id":"399018","children":[]},{"parent":"652273","name":"nats","id":"224566","children":[]},{"parent":"652273","name":"jms","id":"519505","children":[]},{"parent":"652273","name":"sns","id":"373126","children":[]},{"parent":"652273","name":"sqs","id":"826943","children":[]},{"parent":"652273","name":"stomp","id":"827621","children":[]},{"parent":"652273","name":"redis","id":"582820","children":[]},{"parent":"652273","name":"ibmmq","id":"357346","children":[]},{"parent":"652273","name":"solace","id":"18495","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"908769","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"297482","children":[]}]}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"287037","name":"Reference","id":"437906","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"437906","name":"$ref","id":"959106","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"287037","name":"operationTrait","id":"249414","children":[{"type":"string","parent":"249414","name":"summary","id":"262960","children":[]},{"type":"string","parent":"249414","name":"description","id":"282000","children":[]},{"type":"array","uniqueItems":true,"parent":"249414","name":"tags","id":"999993","children":[{"type":"string","parent":"999993","name":"name","id":"247155","children":[]},{"type":"string","parent":"999993","name":"description","id":"758784","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"999993","name":"externalDocs","id":"703213","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"999993","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"31357","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"249414","name":"externalDocs","id":"401965","children":[{"type":"string","parent":"401965","name":"description","id":"984313","children":[]},{"type":"string","format":"uri","parent":"401965","name":"url","id":"753428","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"401965","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"277020","children":[]}]},{"type":"string","parent":"249414","name":"operationId","id":"363639","children":[]},{"type":"array","parent":"249414","name":"security","id":"599381","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"599381","name":"array","id":"993003","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"249414","name":"bindings","id":"496273","children":[{"parent":"496273","name":"http","id":"429417","children":[]},{"parent":"496273","name":"ws","id":"377237","children":[]},{"parent":"496273","name":"amqp","id":"59676","children":[]},{"parent":"496273","name":"amqp1","id":"846072","children":[]},{"parent":"496273","name":"mqtt","id":"931229","children":[]},{"parent":"496273","name":"mqtt5","id":"702452","children":[]},{"parent":"496273","name":"kafka","id":"205497","children":[]},{"parent":"496273","name":"anypointmq","id":"984467","children":[]},{"parent":"496273","name":"nats","id":"531859","children":[]},{"parent":"496273","name":"jms","id":"215153","children":[]},{"parent":"496273","name":"sns","id":"568484","children":[]},{"parent":"496273","name":"sqs","id":"563614","children":[]},{"parent":"496273","name":"stomp","id":"619740","children":[]},{"parent":"496273","name":"redis","id":"791342","children":[]},{"parent":"496273","name":"ibmmq","id":"689077","children":[]},{"parent":"496273","name":"solace","id":"539929","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"249414","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"779324","children":[]}]}]},{"type":"string","parent":"485213","name":"summary","id":"655888","children":[]},{"type":"string","parent":"485213","name":"description","id":"299639","children":[]},{"type":"array","parent":"485213","name":"security","id":"219947","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"219947","name":"array","id":"806764","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"type":"array","uniqueItems":true,"parent":"485213","name":"tags","id":"682851","children":[{"type":"string","parent":"682851","name":"name","id":"384634","children":[]},{"type":"string","parent":"682851","name":"description","id":"642054","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"682851","name":"externalDocs","id":"173948","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"682851","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"822382","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"485213","name":"externalDocs","id":"6154","children":[{"type":"string","parent":"6154","name":"description","id":"873650","children":[]},{"type":"string","format":"uri","parent":"6154","name":"url","id":"378049","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"6154","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"572521","children":[]}]},{"type":"string","parent":"485213","name":"operationId","id":"11160","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"485213","name":"bindings","id":"572985","children":[{"parent":"572985","name":"http","id":"28040","children":[]},{"parent":"572985","name":"ws","id":"698292","children":[]},{"parent":"572985","name":"amqp","id":"565562","children":[]},{"parent":"572985","name":"amqp1","id":"238337","children":[]},{"parent":"572985","name":"mqtt","id":"187458","children":[]},{"parent":"572985","name":"mqtt5","id":"211685","children":[]},{"parent":"572985","name":"kafka","id":"974794","children":[]},{"parent":"572985","name":"anypointmq","id":"921472","children":[]},{"parent":"572985","name":"nats","id":"551","children":[]},{"parent":"572985","name":"jms","id":"714148","children":[]},{"parent":"572985","name":"sns","id":"199751","children":[]},{"parent":"572985","name":"sqs","id":"285283","children":[]},{"parent":"572985","name":"stomp","id":"50892","children":[]},{"parent":"572985","name":"redis","id":"555203","children":[]},{"parent":"572985","name":"ibmmq","id":"301478","children":[]},{"parent":"572985","name":"solace","id":"922211","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/message.json","parent":"485213","name":"message","id":"445958","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"445958","name":"Reference","id":"778070","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"778070","name":"$ref","id":"557725","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"485213","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"28643","children":[]}]},{"type":"boolean","default":false,"parent":"282245","name":"deprecated","id":"826774","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"282245","name":"bindings","id":"97968","children":[{"parent":"97968","name":"http","id":"741507","children":[]},{"parent":"97968","name":"ws","id":"63923","children":[]},{"parent":"97968","name":"amqp","id":"609023","children":[]},{"parent":"97968","name":"amqp1","id":"928374","children":[]},{"parent":"97968","name":"mqtt","id":"667583","children":[]},{"parent":"97968","name":"mqtt5","id":"263806","children":[]},{"parent":"97968","name":"kafka","id":"123614","children":[]},{"parent":"97968","name":"anypointmq","id":"618337","children":[]},{"parent":"97968","name":"nats","id":"108945","children":[]},{"parent":"97968","name":"jms","id":"562524","children":[]},{"parent":"97968","name":"sns","id":"903654","children":[]},{"parent":"97968","name":"sqs","id":"743352","children":[]},{"parent":"97968","name":"stomp","id":"269361","children":[]},{"parent":"97968","name":"redis","id":"305638","children":[]},{"parent":"97968","name":"ibmmq","id":"12717","children":[]},{"parent":"97968","name":"solace","id":"229966","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"282245","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"514213","children":[]}],"description":{"raw":"Holds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n"},"Channels Object Example":{"raw":"```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/components.json","parent":1,"name":"components","id":"154956","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schemas.json","parent":"154956","name":"schemas","id":"113840","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"113840","name":"schema#","id":"685937","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"24048","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"113840","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"374508","name":"additionalProperties","parent":"113840","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"964576","name":"items","parent":"113840","children":[]},{"type":"array","minItems":1,"id":"988074","name":"allOf","parent":"113840","children":[]},{"type":"array","minItems":1,"id":"113013","name":"oneOf","parent":"113840","children":[]},{"type":"array","minItems":1,"id":"137554","name":"anyOf","parent":"113840","children":[]},{"id":"948332","name":"not","parent":"113840","children":[]},{"type":"object","default":{},"id":"632854","name":"properties","parent":"113840","children":[]},{"type":"object","default":{},"id":"419545","name":"patternProperties","parent":"113840","children":[]},{"id":"867167","name":"propertyNames","parent":"113840","children":[]},{"id":"330901","name":"contains","parent":"113840","children":[]},{"type":"string","id":"608565","name":"discriminator","parent":"113840","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"997960","name":"externalDocs","parent":"113840","children":[{"type":"string","parent":"997960","name":"description","id":"505907","children":[]},{"type":"string","format":"uri","parent":"997960","name":"url","id":"141728","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"997960","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"576407","children":[]}]},{"type":"boolean","default":false,"id":"324935","name":"deprecated","parent":"113840","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/servers.json","parent":"154956","name":"servers","id":"717913","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"717913","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"310080","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"310080","name":"$ref","id":"167217","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/server.json","parent":"717913","name":"server","description":{"raw":"An object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`, `googlepubsub`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)]] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of servers.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Server Object Example":{"raw":"A single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:development\",\n          \"description\": \"This environment is meant for developers to run their own tests\"\n        }\n      ]\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:staging\",\n          \"description\": \"This environment is a replica of the production environment\"\n        }\n      ]\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:production\",\n          \"description\": \"This environment is the live environment available for final users\"\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:development\"\n        description: \"This environment is meant for developers to run their own tests\"\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:staging\"\n        description: \"This environment is a replica of the production environment\"\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:production\"\n        description: \"This environment is the live environment available for final users\"\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n"}},"id":"190399","children":[{"type":"string","parent":"190399","name":"url","id":"308865","children":[]},{"type":"string","parent":"190399","name":"description","id":"936573","children":[]},{"type":"string","description":"The transfer protocol.","parent":"190399","name":"protocol","id":"961214","children":[]},{"type":"string","parent":"190399","name":"protocolVersion","id":"878784","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/serverVariables.json","parent":"190399","name":"variables","id":"564581","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"564581","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"527672","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"527672","name":"$ref","id":"558594","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/serverVariable.json","parent":"564581","name":"serverVariable","id":"383022","children":[{"type":"string","uniqueItems":true,"parent":"383022","name":"enum","id":"631460","children":[]},{"type":"string","parent":"383022","name":"default","id":"88440","children":[]},{"type":"string","parent":"383022","name":"description","id":"42613","children":[]},{"type":"string","parent":"383022","name":"examples","id":"389173","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"383022","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"878191","children":[]}]}]},{"type":"array","parent":"190399","name":"security","id":"383884","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"383884","name":"array","id":"222676","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"190399","name":"bindings","id":"708096","children":[{"parent":"708096","name":"http","id":"393971","children":[]},{"parent":"708096","name":"ws","id":"740613","children":[]},{"parent":"708096","name":"amqp","id":"869374","children":[]},{"parent":"708096","name":"amqp1","id":"462708","children":[]},{"parent":"708096","name":"mqtt","id":"945034","children":[]},{"parent":"708096","name":"mqtt5","id":"523205","children":[]},{"parent":"708096","name":"kafka","id":"590923","children":[]},{"parent":"708096","name":"anypointmq","id":"993703","children":[]},{"parent":"708096","name":"nats","id":"729801","children":[]},{"parent":"708096","name":"jms","id":"810567","children":[]},{"parent":"708096","name":"sns","id":"669338","children":[]},{"parent":"708096","name":"sqs","id":"950071","children":[]},{"parent":"708096","name":"stomp","id":"673079","children":[]},{"parent":"708096","name":"redis","id":"697895","children":[]},{"parent":"708096","name":"ibmmq","id":"228832","children":[]},{"parent":"708096","name":"solace","id":"229701","children":[]}]},{"type":"array","uniqueItems":true,"parent":"190399","name":"tags","id":"663949","children":[{"type":"string","parent":"663949","name":"name","id":"191768","children":[]},{"type":"string","parent":"663949","name":"description","id":"357596","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"663949","name":"externalDocs","id":"171115","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"663949","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"981369","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"190399","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"24230","children":[]}]}],"description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/channels.json","parent":"154956","name":"channels","id":"897510","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"897510","name":"$ref","id":"50632","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/parameters.json","parent":"897510","name":"parameters","id":"846100","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"846100","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"642246","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"642246","name":"$ref","id":"783165","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/parameter.json","parent":"846100","name":"parameter","description":{"raw":"Describes a parameter included in a channel name.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Parameter Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}},"id":"238321","children":[{"type":"string","description":"A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.","parent":"238321","name":"description","id":"840811","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json","parent":"238321","name":"schema","id":"506790","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"506790","name":"schema#","id":"48206","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"398279","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"506790","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"740919","name":"additionalProperties","parent":"506790","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"390158","name":"items","parent":"506790","children":[]},{"type":"array","minItems":1,"id":"277847","name":"allOf","parent":"506790","children":[]},{"type":"array","minItems":1,"id":"643676","name":"oneOf","parent":"506790","children":[]},{"type":"array","minItems":1,"id":"376852","name":"anyOf","parent":"506790","children":[]},{"id":"702498","name":"not","parent":"506790","children":[]},{"type":"object","default":{},"id":"36877","name":"properties","parent":"506790","children":[]},{"type":"object","default":{},"id":"632696","name":"patternProperties","parent":"506790","children":[]},{"id":"571795","name":"propertyNames","parent":"506790","children":[]},{"id":"233309","name":"contains","parent":"506790","children":[]},{"type":"string","id":"626976","name":"discriminator","parent":"506790","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"321818","name":"externalDocs","parent":"506790","children":[{"type":"string","parent":"321818","name":"description","id":"818967","children":[]},{"type":"string","format":"uri","parent":"321818","name":"url","id":"584328","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"321818","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"836638","children":[]}]},{"type":"boolean","default":false,"id":"777667","name":"deprecated","parent":"506790","children":[]}],"description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"type":"string","description":"A runtime expression that specifies the location of the parameter value","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"238321","name":"location","id":"299955","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"238321","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"174115","children":[]}]}],"description":{"raw":"Describes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n"},"Parameters Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n"}}},{"type":"string","description":"A description of the channel.","parent":"897510","name":"description","id":"185202","children":[]},{"type":"string","description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}},"uniqueItems":true,"parent":"897510","name":"servers","id":"220376","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operation.json","parent":"897510","name":"publish","id":"678429","children":[{"type":"array","parent":"678429","name":"traits","id":"287037","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"287037","name":"Reference","id":"437906","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"437906","name":"$ref","id":"959106","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"287037","name":"operationTrait","id":"249414","children":[{"type":"string","parent":"249414","name":"summary","id":"262960","children":[]},{"type":"string","parent":"249414","name":"description","id":"282000","children":[]},{"type":"array","uniqueItems":true,"parent":"249414","name":"tags","id":"999993","children":[{"type":"string","parent":"999993","name":"name","id":"247155","children":[]},{"type":"string","parent":"999993","name":"description","id":"758784","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"999993","name":"externalDocs","id":"703213","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"999993","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"31357","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"249414","name":"externalDocs","id":"401965","children":[{"type":"string","parent":"401965","name":"description","id":"984313","children":[]},{"type":"string","format":"uri","parent":"401965","name":"url","id":"753428","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"401965","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"277020","children":[]}]},{"type":"string","parent":"249414","name":"operationId","id":"363639","children":[]},{"type":"array","parent":"249414","name":"security","id":"599381","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"599381","name":"array","id":"993003","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"249414","name":"bindings","id":"496273","children":[{"parent":"496273","name":"http","id":"429417","children":[]},{"parent":"496273","name":"ws","id":"377237","children":[]},{"parent":"496273","name":"amqp","id":"59676","children":[]},{"parent":"496273","name":"amqp1","id":"846072","children":[]},{"parent":"496273","name":"mqtt","id":"931229","children":[]},{"parent":"496273","name":"mqtt5","id":"702452","children":[]},{"parent":"496273","name":"kafka","id":"205497","children":[]},{"parent":"496273","name":"anypointmq","id":"984467","children":[]},{"parent":"496273","name":"nats","id":"531859","children":[]},{"parent":"496273","name":"jms","id":"215153","children":[]},{"parent":"496273","name":"sns","id":"568484","children":[]},{"parent":"496273","name":"sqs","id":"563614","children":[]},{"parent":"496273","name":"stomp","id":"619740","children":[]},{"parent":"496273","name":"redis","id":"791342","children":[]},{"parent":"496273","name":"ibmmq","id":"689077","children":[]},{"parent":"496273","name":"solace","id":"539929","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"249414","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"779324","children":[]}]}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"287037","name":"Reference","id":"437906","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"437906","name":"$ref","id":"959106","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"287037","name":"operationTrait","id":"249414","children":[{"type":"string","parent":"249414","name":"summary","id":"262960","children":[]},{"type":"string","parent":"249414","name":"description","id":"282000","children":[]},{"type":"array","uniqueItems":true,"parent":"249414","name":"tags","id":"999993","children":[{"type":"string","parent":"999993","name":"name","id":"247155","children":[]},{"type":"string","parent":"999993","name":"description","id":"758784","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"999993","name":"externalDocs","id":"703213","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"999993","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"31357","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"249414","name":"externalDocs","id":"401965","children":[{"type":"string","parent":"401965","name":"description","id":"984313","children":[]},{"type":"string","format":"uri","parent":"401965","name":"url","id":"753428","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"401965","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"277020","children":[]}]},{"type":"string","parent":"249414","name":"operationId","id":"363639","children":[]},{"type":"array","parent":"249414","name":"security","id":"599381","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"599381","name":"array","id":"993003","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"249414","name":"bindings","id":"496273","children":[{"parent":"496273","name":"http","id":"429417","children":[]},{"parent":"496273","name":"ws","id":"377237","children":[]},{"parent":"496273","name":"amqp","id":"59676","children":[]},{"parent":"496273","name":"amqp1","id":"846072","children":[]},{"parent":"496273","name":"mqtt","id":"931229","children":[]},{"parent":"496273","name":"mqtt5","id":"702452","children":[]},{"parent":"496273","name":"kafka","id":"205497","children":[]},{"parent":"496273","name":"anypointmq","id":"984467","children":[]},{"parent":"496273","name":"nats","id":"531859","children":[]},{"parent":"496273","name":"jms","id":"215153","children":[]},{"parent":"496273","name":"sns","id":"568484","children":[]},{"parent":"496273","name":"sqs","id":"563614","children":[]},{"parent":"496273","name":"stomp","id":"619740","children":[]},{"parent":"496273","name":"redis","id":"791342","children":[]},{"parent":"496273","name":"ibmmq","id":"689077","children":[]},{"parent":"496273","name":"solace","id":"539929","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"249414","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"779324","children":[]}]}]},{"type":"string","parent":"678429","name":"summary","id":"138293","children":[]},{"type":"string","parent":"678429","name":"description","id":"515283","children":[]},{"type":"array","parent":"678429","name":"security","id":"599733","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"599733","name":"array","id":"665400","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"type":"array","uniqueItems":true,"parent":"678429","name":"tags","id":"521389","children":[{"type":"string","parent":"521389","name":"name","id":"741630","children":[]},{"type":"string","parent":"521389","name":"description","id":"825556","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"521389","name":"externalDocs","id":"928057","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"521389","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"41422","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"678429","name":"externalDocs","id":"442178","children":[{"type":"string","parent":"442178","name":"description","id":"488792","children":[]},{"type":"string","format":"uri","parent":"442178","name":"url","id":"871881","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"442178","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"773804","children":[]}]},{"type":"string","parent":"678429","name":"operationId","id":"100845","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"678429","name":"bindings","id":"284488","children":[{"parent":"284488","name":"http","id":"549981","children":[]},{"parent":"284488","name":"ws","id":"413706","children":[]},{"parent":"284488","name":"amqp","id":"137397","children":[]},{"parent":"284488","name":"amqp1","id":"105796","children":[]},{"parent":"284488","name":"mqtt","id":"385402","children":[]},{"parent":"284488","name":"mqtt5","id":"589265","children":[]},{"parent":"284488","name":"kafka","id":"642901","children":[]},{"parent":"284488","name":"anypointmq","id":"108654","children":[]},{"parent":"284488","name":"nats","id":"442737","children":[]},{"parent":"284488","name":"jms","id":"366221","children":[]},{"parent":"284488","name":"sns","id":"765529","children":[]},{"parent":"284488","name":"sqs","id":"415376","children":[]},{"parent":"284488","name":"stomp","id":"270405","children":[]},{"parent":"284488","name":"redis","id":"320094","children":[]},{"parent":"284488","name":"ibmmq","id":"593415","children":[]},{"parent":"284488","name":"solace","id":"936270","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/message.json","parent":"678429","name":"message","id":"956972","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"956972","name":"Reference","id":"369414","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"369414","name":"$ref","id":"617252","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"678429","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"571657","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operation.json","parent":"897510","name":"subscribe","id":"54036","children":[{"type":"array","parent":"54036","name":"traits","id":"37459","children":[],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"287037","name":"Reference","id":"437906","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"437906","name":"$ref","id":"959106","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json","parent":"287037","name":"operationTrait","id":"249414","children":[{"type":"string","parent":"249414","name":"summary","id":"262960","children":[]},{"type":"string","parent":"249414","name":"description","id":"282000","children":[]},{"type":"array","uniqueItems":true,"parent":"249414","name":"tags","id":"999993","children":[{"type":"string","parent":"999993","name":"name","id":"247155","children":[]},{"type":"string","parent":"999993","name":"description","id":"758784","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"999993","name":"externalDocs","id":"703213","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"999993","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"31357","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"249414","name":"externalDocs","id":"401965","children":[{"type":"string","parent":"401965","name":"description","id":"984313","children":[]},{"type":"string","format":"uri","parent":"401965","name":"url","id":"753428","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"401965","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"277020","children":[]}]},{"type":"string","parent":"249414","name":"operationId","id":"363639","children":[]},{"type":"array","parent":"249414","name":"security","id":"599381","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"599381","name":"array","id":"993003","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"249414","name":"bindings","id":"496273","children":[{"parent":"496273","name":"http","id":"429417","children":[]},{"parent":"496273","name":"ws","id":"377237","children":[]},{"parent":"496273","name":"amqp","id":"59676","children":[]},{"parent":"496273","name":"amqp1","id":"846072","children":[]},{"parent":"496273","name":"mqtt","id":"931229","children":[]},{"parent":"496273","name":"mqtt5","id":"702452","children":[]},{"parent":"496273","name":"kafka","id":"205497","children":[]},{"parent":"496273","name":"anypointmq","id":"984467","children":[]},{"parent":"496273","name":"nats","id":"531859","children":[]},{"parent":"496273","name":"jms","id":"215153","children":[]},{"parent":"496273","name":"sns","id":"568484","children":[]},{"parent":"496273","name":"sqs","id":"563614","children":[]},{"parent":"496273","name":"stomp","id":"619740","children":[]},{"parent":"496273","name":"redis","id":"791342","children":[]},{"parent":"496273","name":"ibmmq","id":"689077","children":[]},{"parent":"496273","name":"solace","id":"539929","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"249414","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"779324","children":[]}]}]},{"type":"string","parent":"54036","name":"summary","id":"763278","children":[]},{"type":"string","parent":"54036","name":"description","id":"601804","children":[]},{"type":"array","parent":"54036","name":"security","id":"655608","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"655608","name":"array","id":"283199","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"type":"array","uniqueItems":true,"parent":"54036","name":"tags","id":"962909","children":[{"type":"string","parent":"962909","name":"name","id":"387020","children":[]},{"type":"string","parent":"962909","name":"description","id":"643104","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"962909","name":"externalDocs","id":"507712","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"962909","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"784348","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"54036","name":"externalDocs","id":"378136","children":[{"type":"string","parent":"378136","name":"description","id":"675299","children":[]},{"type":"string","format":"uri","parent":"378136","name":"url","id":"81909","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"378136","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"371693","children":[]}]},{"type":"string","parent":"54036","name":"operationId","id":"642987","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"54036","name":"bindings","id":"610296","children":[{"parent":"610296","name":"http","id":"600629","children":[]},{"parent":"610296","name":"ws","id":"207354","children":[]},{"parent":"610296","name":"amqp","id":"737421","children":[]},{"parent":"610296","name":"amqp1","id":"592790","children":[]},{"parent":"610296","name":"mqtt","id":"371047","children":[]},{"parent":"610296","name":"mqtt5","id":"407806","children":[]},{"parent":"610296","name":"kafka","id":"255213","children":[]},{"parent":"610296","name":"anypointmq","id":"598648","children":[]},{"parent":"610296","name":"nats","id":"738455","children":[]},{"parent":"610296","name":"jms","id":"727151","children":[]},{"parent":"610296","name":"sns","id":"859102","children":[]},{"parent":"610296","name":"sqs","id":"95419","children":[]},{"parent":"610296","name":"stomp","id":"668042","children":[]},{"parent":"610296","name":"redis","id":"570980","children":[]},{"parent":"610296","name":"ibmmq","id":"800051","children":[]},{"parent":"610296","name":"solace","id":"609752","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/message.json","parent":"54036","name":"message","id":"790129","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"790129","name":"Reference","id":"776812","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"776812","name":"$ref","id":"957420","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"54036","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"499728","children":[]}]},{"type":"boolean","default":false,"parent":"897510","name":"deprecated","id":"152993","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"897510","name":"bindings","id":"723892","children":[{"parent":"723892","name":"http","id":"821267","children":[]},{"parent":"723892","name":"ws","id":"670830","children":[]},{"parent":"723892","name":"amqp","id":"632246","children":[]},{"parent":"723892","name":"amqp1","id":"693555","children":[]},{"parent":"723892","name":"mqtt","id":"47284","children":[]},{"parent":"723892","name":"mqtt5","id":"342530","children":[]},{"parent":"723892","name":"kafka","id":"86","children":[]},{"parent":"723892","name":"anypointmq","id":"40946","children":[]},{"parent":"723892","name":"nats","id":"748971","children":[]},{"parent":"723892","name":"jms","id":"483918","children":[]},{"parent":"723892","name":"sns","id":"978385","children":[]},{"parent":"723892","name":"sqs","id":"323804","children":[]},{"parent":"723892","name":"stomp","id":"534460","children":[]},{"parent":"723892","name":"redis","id":"61636","children":[]},{"parent":"723892","name":"ibmmq","id":"450452","children":[]},{"parent":"723892","name":"solace","id":"345699","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"897510","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"454341","children":[]}],"description":{"raw":"Holds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n"},"Channels Object Example":{"raw":"```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.5.0/serverVariables.json","parent":"154956","name":"serverVariables","id":"851120","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"851120","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"350317","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"350317","name":"$ref","id":"702837","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/serverVariable.json","parent":"851120","name":"serverVariable","id":"306328","children":[{"type":"string","uniqueItems":true,"parent":"306328","name":"enum","id":"76659","children":[]},{"type":"string","parent":"306328","name":"default","id":"364150","children":[]},{"type":"string","parent":"306328","name":"description","id":"126250","children":[]},{"type":"string","parent":"306328","name":"examples","id":"82798","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"306328","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"901659","children":[]}]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/messages.json","parent":"154956","name":"messages","id":"102313","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"102313","name":"Reference","id":"632276","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"632276","name":"$ref","id":"289743","children":[]}],"description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}]},{"type":"object","parent":"154956","name":"securitySchemes","id":"298635","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"298635","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"232092","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"232092","name":"$ref","id":"640068","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityScheme.json","parent":"298635","name":"SecurityScheme","id":"732067","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/userPassword.json","parent":"732067","name":"userPassword","id":"236816","children":[{"type":"string","enum":["userPassword"],"parent":"236816","name":"type","id":"92987","children":[]},{"type":"string","parent":"236816","name":"description","id":"661309","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"236816","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"271438","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/apiKey.json","parent":"732067","name":"apiKey","id":"361184","children":[{"type":"string","enum":["apiKey"],"parent":"361184","name":"type","id":"29687","children":[]},{"type":"string","enum":["user","password"],"parent":"361184","name":"in","id":"198358","children":[]},{"type":"string","parent":"361184","name":"description","id":"551548","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"361184","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"396714","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/X509.json","parent":"732067","name":"X509","id":"814451","children":[{"type":"string","enum":["X509"],"parent":"814451","name":"type","id":"772249","children":[]},{"type":"string","parent":"814451","name":"description","id":"692322","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"814451","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"285686","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/symmetricEncryption.json","parent":"732067","name":"symmetricEncryption","id":"336124","children":[{"type":"string","enum":["symmetricEncryption"],"parent":"336124","name":"type","id":"89531","children":[]},{"type":"string","parent":"336124","name":"description","id":"160538","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"336124","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"875577","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/asymmetricEncryption.json","parent":"732067","name":"asymmetricEncryption","id":"914110","children":[{"type":"string","enum":["asymmetricEncryption"],"parent":"914110","name":"type","id":"160293","children":[]},{"type":"string","parent":"914110","name":"description","id":"518061","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"914110","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"811044","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/HTTPSecurityScheme.json","parent":"732067","name":"HTTPSecurityScheme","id":"5807","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/NonBearerHTTPSecurityScheme.json","parent":"5807","name":"NonBearerHTTPSecurityScheme","id":"89504","children":[{"type":"string","parent":"89504","name":"scheme","id":"688927","children":[]},{"type":"string","parent":"89504","name":"description","id":"230006","children":[]},{"type":"string","enum":["http"],"parent":"89504","name":"type","id":"949275","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"89504","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"90940","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/BearerHTTPSecurityScheme.json","parent":"5807","name":"BearerHTTPSecurityScheme","id":"362091","children":[{"type":"string","enum":["bearer"],"parent":"362091","name":"scheme","id":"669168","children":[]},{"type":"string","parent":"362091","name":"bearerFormat","id":"135947","children":[]},{"type":"string","enum":["http"],"parent":"362091","name":"type","id":"199626","children":[]},{"type":"string","parent":"362091","name":"description","id":"459152","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"362091","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"775330","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/APIKeyHTTPSecurityScheme.json","parent":"5807","name":"APIKeyHTTPSecurityScheme","id":"630590","children":[{"type":"string","enum":["httpApiKey"],"parent":"630590","name":"type","id":"183487","children":[]},{"type":"string","parent":"630590","name":"name","id":"574765","children":[]},{"type":"string","enum":["header","query","cookie"],"parent":"630590","name":"in","id":"710220","children":[]},{"type":"string","parent":"630590","name":"description","id":"496676","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"630590","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"500047","children":[]}]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flows.json","parent":"732067","name":"oauth2Flows","id":"3394","children":[{"type":"string","enum":["oauth2"],"parent":"3394","name":"type","id":"533996","children":[]},{"type":"string","parent":"3394","name":"description","id":"869006","children":[]},{"type":"object","properties":{"implicit":{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["authorizationUrl","scopes"]},{"not":{"required":["tokenUrl"]}}],"parent":"649450","name":"implicit","id":"598723","children":[]},"password":{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["tokenUrl","scopes"]},{"not":{"required":["authorizationUrl"]}}],"parent":"649450","name":"password","id":"490459","children":[]},"clientCredentials":{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["tokenUrl","scopes"]},{"not":{"required":["authorizationUrl"]}}],"parent":"649450","name":"clientCredentials","id":"44098","children":[]},"authorizationCode":{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["authorizationUrl","tokenUrl","scopes"]}],"parent":"649450","name":"authorizationCode","id":"943135","children":[]}},"additionalProperties":false,"parent":"3394","name":"flows","id":"649450","children":[{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["authorizationUrl","scopes"]},{"not":{"required":["tokenUrl"]}}],"parent":"649450","name":"implicit","id":"598723","children":[]},{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["tokenUrl","scopes"]},{"not":{"required":["authorizationUrl"]}}],"parent":"649450","name":"password","id":"490459","children":[]},{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["tokenUrl","scopes"]},{"not":{"required":["authorizationUrl"]}}],"parent":"649450","name":"clientCredentials","id":"44098","children":[]},{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/oauth2Flow.json"},{"required":["authorizationUrl","tokenUrl","scopes"]}],"parent":"649450","name":"authorizationCode","id":"943135","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"3394","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"286611","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/openIdConnect.json","parent":"732067","name":"openIdConnect","id":"806154","children":[{"type":"string","enum":["openIdConnect"],"parent":"806154","name":"type","id":"946660","children":[]},{"type":"string","parent":"806154","name":"description","id":"530156","children":[]},{"type":"string","format":"uri","parent":"806154","name":"openIdConnectUrl","id":"686025","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"806154","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"5582","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/SaslSecurityScheme.json","parent":"732067","name":"SaslSecurityScheme","id":"228092","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/SaslPlainSecurityScheme.json","parent":"228092","name":"SaslPlainSecurityScheme","id":"503062","children":[{"type":"string","enum":["plain"],"parent":"503062","name":"type","id":"651859","children":[]},{"type":"string","parent":"503062","name":"description","id":"836543","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"503062","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"257090","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/SaslScramSecurityScheme.json","parent":"228092","name":"SaslScramSecurityScheme","id":"355963","children":[{"type":"string","enum":["scramSha256","scramSha512"],"parent":"355963","name":"type","id":"400544","children":[]},{"type":"string","parent":"355963","name":"description","id":"281980","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"355963","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"50155","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/SaslGssapiSecurityScheme.json","parent":"228092","name":"SaslGssapiSecurityScheme","id":"610672","children":[{"type":"string","enum":["gssapi"],"parent":"610672","name":"type","id":"812567","children":[]},{"type":"string","parent":"610672","name":"description","id":"374378","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"610672","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"610540","children":[]}]}]}]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/parameters.json","parent":"154956","name":"parameters","id":"246018","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"246018","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"305098","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"305098","name":"$ref","id":"620563","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/parameter.json","parent":"246018","name":"parameter","description":{"raw":"Describes a parameter included in a channel name.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Parameter Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}},"id":"910198","children":[{"type":"string","description":"A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.","parent":"910198","name":"description","id":"495206","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json","parent":"910198","name":"schema","id":"905343","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"905343","name":"schema#","id":"285612","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","id":"865703","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"905343","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"boolean"}],"default":{},"id":"104358","name":"additionalProperties","parent":"905343","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"}}],"default":{},"id":"210811","name":"items","parent":"905343","children":[]},{"type":"array","minItems":1,"id":"636902","name":"allOf","parent":"905343","children":[]},{"type":"array","minItems":1,"id":"564459","name":"oneOf","parent":"905343","children":[]},{"type":"array","minItems":1,"id":"696761","name":"anyOf","parent":"905343","children":[]},{"id":"174993","name":"not","parent":"905343","children":[]},{"type":"object","default":{},"id":"844145","name":"properties","parent":"905343","children":[]},{"type":"object","default":{},"id":"763212","name":"patternProperties","parent":"905343","children":[]},{"id":"153244","name":"propertyNames","parent":"905343","children":[]},{"id":"553645","name":"contains","parent":"905343","children":[]},{"type":"string","id":"324162","name":"discriminator","parent":"905343","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","id":"805701","name":"externalDocs","parent":"905343","children":[{"type":"string","parent":"805701","name":"description","id":"862432","children":[]},{"type":"string","format":"uri","parent":"805701","name":"url","id":"883108","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"805701","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"229820","children":[]}]},{"type":"boolean","default":false,"id":"82640","name":"deprecated","parent":"905343","children":[]}],"description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"type":"string","description":"A runtime expression that specifies the location of the parameter value","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"910198","name":"location","id":"927812","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"910198","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"125716","children":[]}]}],"description":{"raw":"Describes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n"},"Parameters Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n"}}},{"type":"object","parent":"154956","name":"correlationIds","id":"786769","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"786769","name":"Reference","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"12476","children":[{"$ref":"http://asyncapi.com/definitions/2.5.0/ReferenceObject.json","parent":"12476","name":"$ref","id":"512069","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/correlationId.json","parent":"786769","name":"correlationId","id":"80113","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"80113","name":"description","id":"926402","children":[]},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"80113","name":"location","id":"121678","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"80113","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"452930","children":[]}]}]},{"type":"object","additionalProperties":{"$ref":"http://asyncapi.com/definitions/2.5.0/operationTrait.json"},"parent":"154956","name":"operationTraits","id":"402852","children":[{"type":"string","parent":"402852","name":"summary","id":"622230","children":[]},{"type":"string","parent":"402852","name":"description","id":"910121","children":[]},{"type":"array","uniqueItems":true,"parent":"402852","name":"tags","id":"802323","children":[],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"402852","name":"externalDocs","id":"638901","children":[]},{"type":"string","parent":"402852","name":"operationId","id":"434790","children":[]},{"type":"array","parent":"402852","name":"security","id":"773637","children":[],"$ref":"http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json"},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"402852","name":"bindings","id":"313003","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"402852","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"130574","children":[]}]},{"type":"object","additionalProperties":{"$ref":"http://asyncapi.com/definitions/2.5.0/messageTrait.json"},"parent":"154956","name":"messageTraits","id":"40266","children":[{"type":"string","parent":"40266","name":"schemaFormat","id":"604695","children":[]},{"type":"string","parent":"40266","name":"contentType","id":"954674","children":[]},{"allOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/schema.json"},{"properties":{"type":{"const":"object"}}}],"parent":"40266","name":"headers","id":"694462","children":[]},{"type":"string","parent":"40266","name":"messageId","id":"52241","children":[]},{"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.5.0/Reference.json","parent":"206848","name":"Reference","id":"822493","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/correlationId.json","parent":"206848","name":"correlationId","id":"320101","children":[]}],"children":[],"parent":"40266","name":"correlationId","id":"292547"},{"type":"array","uniqueItems":true,"parent":"40266","name":"tags","id":"591171","children":[],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"type":"string","description":"A brief summary of the message.","parent":"40266","name":"summary","id":"398860","children":[]},{"type":"string","description":"Name of the message.","parent":"40266","name":"name","id":"397278","children":[]},{"type":"string","description":"A human-friendly title for the message.","parent":"40266","name":"title","id":"27940","children":[]},{"type":"string","description":"A longer description of the message. CommonMark is allowed.","parent":"40266","name":"description","id":"448139","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"40266","name":"externalDocs","id":"605293","children":[]},{"type":"boolean","default":false,"parent":"40266","name":"deprecated","id":"856","children":[]},{"type":"object","parent":"40266","name":"examples","id":"241390","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json","parent":"40266","name":"bindings","id":"813729","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"40266","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"573380","children":[]}]},{"type":"object","additionalProperties":{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json"},"parent":"154956","name":"serverBindings","id":"139869","children":[{"parent":"139869","name":"http","id":"169604","children":[]},{"parent":"139869","name":"ws","id":"113628","children":[]},{"parent":"139869","name":"amqp","id":"138995","children":[]},{"parent":"139869","name":"amqp1","id":"250146","children":[]},{"parent":"139869","name":"mqtt","id":"339211","children":[]},{"parent":"139869","name":"mqtt5","id":"295557","children":[]},{"parent":"139869","name":"kafka","id":"322092","children":[]},{"parent":"139869","name":"anypointmq","id":"848298","children":[]},{"parent":"139869","name":"nats","id":"216163","children":[]},{"parent":"139869","name":"jms","id":"155886","children":[]},{"parent":"139869","name":"sns","id":"838714","children":[]},{"parent":"139869","name":"sqs","id":"91429","children":[]},{"parent":"139869","name":"stomp","id":"580799","children":[]},{"parent":"139869","name":"redis","id":"536558","children":[]},{"parent":"139869","name":"ibmmq","id":"277274","children":[]},{"parent":"139869","name":"solace","id":"336938","children":[]}]},{"type":"object","additionalProperties":{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json"},"parent":"154956","name":"channelBindings","id":"717968","children":[{"parent":"717968","name":"http","id":"953015","children":[]},{"parent":"717968","name":"ws","id":"881814","children":[]},{"parent":"717968","name":"amqp","id":"513064","children":[]},{"parent":"717968","name":"amqp1","id":"924348","children":[]},{"parent":"717968","name":"mqtt","id":"975655","children":[]},{"parent":"717968","name":"mqtt5","id":"101203","children":[]},{"parent":"717968","name":"kafka","id":"504908","children":[]},{"parent":"717968","name":"anypointmq","id":"411000","children":[]},{"parent":"717968","name":"nats","id":"999791","children":[]},{"parent":"717968","name":"jms","id":"256781","children":[]},{"parent":"717968","name":"sns","id":"263064","children":[]},{"parent":"717968","name":"sqs","id":"108660","children":[]},{"parent":"717968","name":"stomp","id":"743676","children":[]},{"parent":"717968","name":"redis","id":"90154","children":[]},{"parent":"717968","name":"ibmmq","id":"575161","children":[]},{"parent":"717968","name":"solace","id":"543287","children":[]}]},{"type":"object","additionalProperties":{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json"},"parent":"154956","name":"operationBindings","id":"829064","children":[{"parent":"829064","name":"http","id":"802883","children":[]},{"parent":"829064","name":"ws","id":"19270","children":[]},{"parent":"829064","name":"amqp","id":"84354","children":[]},{"parent":"829064","name":"amqp1","id":"491757","children":[]},{"parent":"829064","name":"mqtt","id":"76717","children":[]},{"parent":"829064","name":"mqtt5","id":"372646","children":[]},{"parent":"829064","name":"kafka","id":"196911","children":[]},{"parent":"829064","name":"anypointmq","id":"320185","children":[]},{"parent":"829064","name":"nats","id":"990438","children":[]},{"parent":"829064","name":"jms","id":"405498","children":[]},{"parent":"829064","name":"sns","id":"475637","children":[]},{"parent":"829064","name":"sqs","id":"243877","children":[]},{"parent":"829064","name":"stomp","id":"197329","children":[]},{"parent":"829064","name":"redis","id":"491944","children":[]},{"parent":"829064","name":"ibmmq","id":"965070","children":[]},{"parent":"829064","name":"solace","id":"296593","children":[]}]},{"type":"object","additionalProperties":{"$ref":"http://asyncapi.com/definitions/2.5.0/bindingsObject.json"},"parent":"154956","name":"messageBindings","id":"823107","children":[{"parent":"823107","name":"http","id":"124547","children":[]},{"parent":"823107","name":"ws","id":"146270","children":[]},{"parent":"823107","name":"amqp","id":"180951","children":[]},{"parent":"823107","name":"amqp1","id":"768263","children":[]},{"parent":"823107","name":"mqtt","id":"487915","children":[]},{"parent":"823107","name":"mqtt5","id":"542642","children":[]},{"parent":"823107","name":"kafka","id":"180592","children":[]},{"parent":"823107","name":"anypointmq","id":"827243","children":[]},{"parent":"823107","name":"nats","id":"238860","children":[]},{"parent":"823107","name":"jms","id":"973773","children":[]},{"parent":"823107","name":"sns","id":"236432","children":[]},{"parent":"823107","name":"sqs","id":"600340","children":[]},{"parent":"823107","name":"stomp","id":"899657","children":[]},{"parent":"823107","name":"redis","id":"641198","children":[]},{"parent":"823107","name":"ibmmq","id":"485849","children":[]},{"parent":"823107","name":"solace","id":"167483","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"154956","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"592845","children":[]}],"description":{"raw":"Holds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---|--- \n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsServers\"></a> servers | Map[`string`, [Server Object](#serverObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Objects](#serverObject).\n<a name=\"componentsServerVariables\"></a> serverVariables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Variable Objects](#serverVariableObject). \n<a name=\"componentsChannels\"></a> channels | Map[`string`, [Channel Item Object](#channelItemObject)] | An object to hold reusable [Channel Item Objects](#channelItemObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Server Bindings Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Channel Bindings Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Bindings Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Bindings Objects](#messageBindingsObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n"},"Components Object Example":{"raw":"```json\n{\n  \"components\": {\n    \"schemas\": {\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"servers\": {\n      \"development\": {\n        \"url\": \"{stage}.gigantic-server.com:{port}\",\n        \"description\": \"Development server\",\n        \"protocol\": \"amqp\",\n        \"protocolVersion\": \"0.9.1\",\n        \"variables\": {\n          \"stage\": {\n            \"$ref\": \"#/components/serverVariables/stage\"\n          },\n          \"port\": {\n            \"$ref\": \"#/components/serverVariables/port\"\n          }\n        }\n      }\n    },\n    \"serverVariables\": {\n      \"stage\": {\n        \"default\": \"demo\",\n        \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n      },\n      \"port\": {\n        \"enum\": [\"8883\", \"8884\"],\n        \"default\": \"8883\"\n      }\n    },\n    \"channels\": {\n      \"user/signedup\": {\n        \"subscribe\": {\n          \"message\": {\n            \"$ref\": \"#/components/messages/userSignUp\"\n          }\n        }\n      }\n    },\n    \"messages\": {\n      \"userSignUp\": {\n        \"summary\": \"Action to sign a user up.\",\n        \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n        \"tags\": [\n          {\n            \"name\": \"user\"\n          },\n          {\n            \"name\": \"signup\"\n          }\n        ],\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"applicationInstanceId\": {\n              \"description\": \"Unique identifier for a given instance of the publishing application\",\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"payload\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"user\": {\n              \"$ref\": \"#/components/schemas/userCreate\"\n            },\n            \"signup\": {\n              \"$ref\": \"#/components/schemas/signup\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"correlationIds\": {\n      \"default\": {\n        \"description\": \"Default Correlation ID\",\n        \"location\": \"$message.header#/correlationId\"\n      }\n    },\n    \"messageTraits\": {\n      \"commonHeaders\": {\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"my-app-header\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"maximum\": 100\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  servers:\n    development:\n      url: \"{stage}.gigantic-server.com:{port}\"\n      description: Development server\n      protocol: amqp\n      protocolVersion: 0.9.1\n      variables:\n        stage:\n          $ref: \"#/components/serverVariables/stage\"\n        port:\n          $ref: \"#/components/serverVariables/port\"\n  serverVariables:\n    stage:\n      default: demo\n      description: This value is assigned by the service provider, in this example `gigantic-server.com`\n    port:\n      enum: [8883, 8884]\n      default: 8883\n  channels:\n    user/signedup:\n      subscribe:\n        message:\n          $ref: \"#/components/messages/userSignUp\"\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n"}}},{"type":"array","uniqueItems":true,"parent":1,"name":"tags","id":"644672","children":[{"type":"string","parent":"644672","name":"name","id":"271596","children":[]},{"type":"string","parent":"644672","name":"description","id":"838686","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":"644672","name":"externalDocs","id":"12560","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"644672","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"570787","children":[]}],"$ref":"http://asyncapi.com/definitions/2.5.0/tag.json","description":{"raw":"A Tags object is a list of Tag Objects.\n\n"}},{"$ref":"http://asyncapi.com/definitions/2.5.0/externalDocs.json","parent":1,"name":"externalDocs","id":"225257","children":[{"type":"string","parent":"225257","name":"description","id":"241683","children":[]},{"type":"string","format":"uri","parent":"225257","name":"url","id":"289327","children":[]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":"225257","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"755104","children":[]}]},{"$ref":"http://asyncapi.com/definitions/2.5.0/specificationExtension.json","parent":1,"name":"^x-[\\w\\d\\.\\x2d_]+$","id":"730672","children":[]}],"name":"AsyncAPI 2.5.0 schema.","description":{"raw":"This is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **REQUIRED.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **REQUIRED.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SDefaultContentType\"></a>defaultContentType | [Default Content Type](#defaultContentTypeString) | Default content type to use when encoding/decoding a message's payload.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **REQUIRED** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"}}}]