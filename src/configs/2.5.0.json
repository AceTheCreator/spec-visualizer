[{"id":1,"name":"AsyncAPI 2.6.0 schema.","parent":0,"description":{"raw":"This is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **REQUIRED.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **REQUIRED.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SDefaultContentType\"></a>defaultContentType | [Default Content Type](#defaultContentTypeString) | Default content type to use when encoding/decoding a message's payload.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **REQUIRED** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"}},"children":[{"type":"string","enum":["2.6.0"],"description":"The AsyncAPI specification version of this document.","parent":1,"name":"asyncapi","id":"496735","children":[],"title":"Asyncapi Object"},{"type":"string","description":"A unique id representing the application.","format":"uri","parent":1,"name":"id","id":"187351","children":[],"title":"Id Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/info.json","parent":1,"name":"info","id":"831884","children":[{"type":"string","description":"A unique and precise title of the API.","parent":"831884","name":"title","id":"630533","children":[],"title":"Title Object"},{"type":"string","description":"A semantic version number of the API.","parent":"831884","name":"version","id":"500402","children":[],"title":"Version Object"},{"type":"string","description":"A longer description of the API. Should be different from the title. CommonMark is allowed.","parent":"831884","name":"description","id":"31843","children":[],"title":"Description Object"},{"type":"string","description":"A URL to the Terms of Service for the API. MUST be in the format of a URL.","format":"uri","parent":"831884","name":"termsOfService","id":"163143","children":[],"title":"TermsOfService Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/contact.json","parent":"831884","name":"contact","id":"290081","children":[{"type":"string","description":"The identifying name of the contact person/organization.","parent":"290081","name":"name","id":"119451","children":[],"title":"Name Object"},{"type":"string","description":"The URL pointing to the contact information.","format":"uri","parent":"290081","name":"url","id":"674568","children":[],"title":"Url Object"},{"type":"string","description":"The email address of the contact person/organization.","format":"email","parent":"290081","name":"email","id":"622063","children":[],"title":"Email Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"290081","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"120385","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Contact Object","description":{"raw":"Contact information for the exposed API.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. This MUST be in the form of an absolute URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Contact Object Example:":{"raw":"```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"https://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: https://www.example.com/support\nemail: support@example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/license.json","parent":"831884","name":"license","id":"739879","children":[{"type":"string","description":"The name of the license type. It's encouraged to use an OSI compatible license.","parent":"739879","name":"name","id":"634642","children":[],"title":"Name Object"},{"type":"string","description":"The URL pointing to the license.","format":"uri","parent":"739879","name":"url","id":"675281","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"739879","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"44980","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"License Object","description":{"raw":"License information for the exposed API.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **REQUIRED.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"License Object Example:":{"raw":"```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: https://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"831884","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"242398","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Info Object","description":{"raw":"The object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **REQUIRED.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **REQUIRED** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. This MUST be in the form of an absolute URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Info Object Example:":{"raw":"```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"https://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"https://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: https://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: https://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: https://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/servers.json","parent":1,"name":"servers","id":"420781","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"420781","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"638978","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"638978","name":"$ref","id":"982254","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/server.json","parent":"420781","name":"server","title":"Server Object","description":{"raw":"An object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`, `googlepubsub`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)]] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of servers.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Server Object Example":{"raw":"A single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:development\",\n          \"description\": \"This environment is meant for developers to run their own tests\"\n        }\n      ]\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:staging\",\n          \"description\": \"This environment is a replica of the production environment\"\n        }\n      ]\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:production\",\n          \"description\": \"This environment is the live environment available for final users\"\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:development\"\n        description: \"This environment is meant for developers to run their own tests\"\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:staging\"\n        description: \"This environment is a replica of the production environment\"\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:production\"\n        description: \"This environment is the live environment available for final users\"\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n"}},"id":"494922","children":[{"type":"string","parent":"494922","name":"url","id":"391390","children":[],"title":"Url Object"},{"type":"string","parent":"494922","name":"description","id":"296542","children":[],"title":"Description Object"},{"type":"string","description":"The transfer protocol.","parent":"494922","name":"protocol","id":"756578","children":[],"title":"Protocol Object"},{"type":"string","parent":"494922","name":"protocolVersion","id":"637296","children":[],"title":"ProtocolVersion Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/serverVariables.json","parent":"494922","name":"variables","id":"733476","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"733476","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"830841","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"830841","name":"$ref","id":"229505","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/serverVariable.json","parent":"733476","name":"serverVariable","title":"Server Variable Object","description":{"raw":"An object representing a Server Variable for server URL template substitution.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n"}},"id":"217959","children":[{"type":"string","uniqueItems":true,"parent":"217959","name":"enum","id":"269971","children":[],"title":"Enum Object"},{"type":"string","parent":"217959","name":"default","id":"998492","children":[],"title":"Default Object"},{"type":"string","parent":"217959","name":"description","id":"286394","children":[],"title":"Description Object"},{"type":"string","parent":"217959","name":"examples","id":"511548","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"217959","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"114703","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Variables Object"},{"type":"array","parent":"494922","name":"security","id":"590287","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"590287","name":"array","title":"Array Object","id":"726744","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"494922","name":"bindings","id":"135798","children":[{"parent":"135798","name":"http","id":"104796","children":[],"title":"Http Object"},{"parent":"135798","name":"ws","id":"12150","children":[],"title":"Ws Object"},{"parent":"135798","name":"amqp","id":"937972","children":[],"title":"Amqp Object"},{"parent":"135798","name":"amqp1","id":"849605","children":[],"title":"Amqp1 Object"},{"parent":"135798","name":"mqtt","id":"894012","children":[],"title":"Mqtt Object"},{"parent":"135798","name":"mqtt5","id":"934527","children":[],"title":"Mqtt5 Object"},{"parent":"135798","name":"kafka","id":"897867","children":[],"title":"Kafka Object"},{"parent":"135798","name":"anypointmq","id":"813021","children":[],"title":"Anypointmq Object"},{"parent":"135798","name":"nats","id":"500412","children":[],"title":"Nats Object"},{"parent":"135798","name":"jms","id":"446444","children":[],"title":"Jms Object"},{"parent":"135798","name":"sns","id":"221647","children":[],"title":"Sns Object"},{"parent":"135798","name":"sqs","id":"433664","children":[],"title":"Sqs Object"},{"parent":"135798","name":"stomp","id":"344981","children":[],"title":"Stomp Object"},{"parent":"135798","name":"redis","id":"947413","children":[],"title":"Redis Object"},{"parent":"135798","name":"ibmmq","id":"560184","children":[],"title":"Ibmmq Object"},{"parent":"135798","name":"solace","id":"480772","children":[],"title":"Solace Object"},{"parent":"135798","name":"googlepubsub","id":"728581","children":[],"title":"Googlepubsub Object"},{"parent":"135798","name":"pulsar","id":"43539","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"type":"array","uniqueItems":true,"parent":"494922","name":"tags","id":"792339","children":[{"type":"string","parent":"792339","name":"name","id":"453355","children":[],"title":"Name Object"},{"type":"string","parent":"792339","name":"description","id":"92355","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"792339","name":"externalDocs","id":"57044","children":[{"type":"string","parent":"57044","name":"description","id":"483675","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"57044","name":"url","id":"384922","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"57044","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"73443","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"792339","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"256276","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"494922","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"722774","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Servers Object","description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}}},{"type":"string","parent":1,"name":"defaultContentType","id":"147719","children":[],"title":"DefaultContentType Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/channels.json","parent":1,"name":"channels","id":"207305","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"207305","name":"$ref","id":"570533","children":[],"title":"$ref Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/parameters.json","parent":"207305","name":"parameters","id":"747555","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"747555","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"974058","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"974058","name":"$ref","id":"802097","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/parameter.json","parent":"747555","name":"parameter","title":"Parameter Object","description":{"raw":"Describes a parameter included in a channel name.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Parameter Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}},"id":"722093","children":[{"type":"string","description":"A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.","parent":"722093","name":"description","id":"294384","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"722093","name":"schema","id":"533263","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"533263","name":"schema#","id":"779400","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"196716","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"533263","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"662607","name":"additionalProperties","parent":"533263","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"333981","name":"items","parent":"533263","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"297924","name":"allOf","parent":"533263","$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","title":"AllOf Object","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"297924","name":"schema#","id":"464050","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"182483","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"297924","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"824519","name":"additionalProperties","parent":"297924","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"81619","name":"items","parent":"297924","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"208569","name":"allOf","parent":"297924","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"345324","name":"oneOf","parent":"297924","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"164373","name":"anyOf","parent":"297924","title":"AnyOf Object","children":[]},{"id":"22179","name":"not","parent":"297924","title":"Not Object","children":[]},{"type":"object","default":{},"id":"37340","name":"properties","parent":"297924","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"771615","name":"patternProperties","parent":"297924","title":"PatternProperties Object","children":[]},{"id":"110429","name":"propertyNames","parent":"297924","title":"PropertyNames Object","children":[]},{"id":"607053","name":"contains","parent":"297924","title":"Contains Object","children":[]},{"type":"string","id":"886503","name":"discriminator","parent":"297924","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"522427","name":"externalDocs","parent":"297924","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"522427","name":"description","id":"953541","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"522427","name":"url","id":"409946","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"522427","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"966735","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"744451","name":"deprecated","parent":"297924","title":"Deprecated Object","children":[]}]},{"type":"array","minItems":1,"id":"819026","name":"oneOf","parent":"533263","$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","title":"OneOf Object","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"819026","name":"schema#","id":"827873","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"309994","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"819026","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"999762","name":"additionalProperties","parent":"819026","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"313051","name":"items","parent":"819026","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"877640","name":"allOf","parent":"819026","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"909264","name":"oneOf","parent":"819026","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"915928","name":"anyOf","parent":"819026","title":"AnyOf Object","children":[]},{"id":"954344","name":"not","parent":"819026","title":"Not Object","children":[]},{"type":"object","default":{},"id":"920199","name":"properties","parent":"819026","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"817604","name":"patternProperties","parent":"819026","title":"PatternProperties Object","children":[]},{"id":"798952","name":"propertyNames","parent":"819026","title":"PropertyNames Object","children":[]},{"id":"296101","name":"contains","parent":"819026","title":"Contains Object","children":[]},{"type":"string","id":"537159","name":"discriminator","parent":"819026","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"67134","name":"externalDocs","parent":"819026","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"67134","name":"description","id":"232082","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"67134","name":"url","id":"434899","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"67134","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"697697","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"9007","name":"deprecated","parent":"819026","title":"Deprecated Object","children":[]}]},{"type":"array","minItems":1,"id":"309141","name":"anyOf","parent":"533263","$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","title":"AnyOf Object","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"309141","name":"schema#","id":"494543","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"198452","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"309141","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"966678","name":"additionalProperties","parent":"309141","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"220737","name":"items","parent":"309141","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"446194","name":"allOf","parent":"309141","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"391057","name":"oneOf","parent":"309141","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"657399","name":"anyOf","parent":"309141","title":"AnyOf Object","children":[]},{"id":"670750","name":"not","parent":"309141","title":"Not Object","children":[]},{"type":"object","default":{},"id":"174872","name":"properties","parent":"309141","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"811854","name":"patternProperties","parent":"309141","title":"PatternProperties Object","children":[]},{"id":"343272","name":"propertyNames","parent":"309141","title":"PropertyNames Object","children":[]},{"id":"112219","name":"contains","parent":"309141","title":"Contains Object","children":[]},{"type":"string","id":"230287","name":"discriminator","parent":"309141","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"719472","name":"externalDocs","parent":"309141","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"719472","name":"description","id":"205088","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"719472","name":"url","id":"87798","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"719472","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"515041","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"209105","name":"deprecated","parent":"309141","title":"Deprecated Object","children":[]}]},{"id":"997","name":"not","parent":"533263","title":"Not Object","children":[]},{"type":"object","default":{},"id":"650454","name":"properties","parent":"533263","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"339648","name":"patternProperties","parent":"533263","title":"PatternProperties Object","children":[]},{"id":"539476","name":"propertyNames","parent":"533263","title":"PropertyNames Object","children":[]},{"id":"22484","name":"contains","parent":"533263","title":"Contains Object","children":[]},{"type":"string","id":"739864","name":"discriminator","parent":"533263","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"227696","name":"externalDocs","parent":"533263","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"227696","name":"description","id":"172963","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"227696","name":"url","id":"350191","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"227696","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"633309","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"5638","name":"deprecated","parent":"533263","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"type":"string","description":"A runtime expression that specifies the location of the parameter value","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"722093","name":"location","id":"938847","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"722093","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"881030","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Parameters Object","description":{"raw":"Describes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n"},"Parameters Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n"}}},{"type":"string","description":"A description of the channel.","parent":"207305","name":"description","id":"715632","children":[],"title":"Description Object"},{"type":"string","description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}},"uniqueItems":true,"parent":"207305","name":"servers","id":"638863","children":[],"title":"Servers Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/operation.json","parent":"207305","name":"publish","id":"384088","children":[{"type":"array","parent":"384088","name":"traits","id":"820308","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"820308","name":"Reference","id":"275672","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"275672","name":"$ref","id":"337122","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"820308","name":"operationTrait","id":"577307","children":[{"type":"string","parent":"577307","name":"summary","id":"242478","children":[],"title":"Summary Object"},{"type":"string","parent":"577307","name":"description","id":"479197","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"577307","name":"tags","id":"901483","children":[{"type":"string","parent":"901483","name":"name","id":"345006","children":[],"title":"Name Object"},{"type":"string","parent":"901483","name":"description","id":"312102","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"901483","name":"externalDocs","id":"909108","children":[{"type":"string","parent":"909108","name":"description","id":"677242","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"909108","name":"url","id":"789434","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"909108","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"629936","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"901483","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"930047","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"577307","name":"externalDocs","id":"805006","children":[{"type":"string","parent":"805006","name":"description","id":"109896","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"805006","name":"url","id":"806844","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"805006","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"913097","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"577307","name":"operationId","id":"456152","children":[],"title":"OperationId Object"},{"type":"array","parent":"577307","name":"security","id":"319542","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"319542","name":"array","title":"Array Object","id":"887525","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"577307","name":"bindings","id":"665307","children":[{"parent":"665307","name":"http","id":"354242","children":[],"title":"Http Object"},{"parent":"665307","name":"ws","id":"661048","children":[],"title":"Ws Object"},{"parent":"665307","name":"amqp","id":"783112","children":[],"title":"Amqp Object"},{"parent":"665307","name":"amqp1","id":"700332","children":[],"title":"Amqp1 Object"},{"parent":"665307","name":"mqtt","id":"777957","children":[],"title":"Mqtt Object"},{"parent":"665307","name":"mqtt5","id":"128593","children":[],"title":"Mqtt5 Object"},{"parent":"665307","name":"kafka","id":"108244","children":[],"title":"Kafka Object"},{"parent":"665307","name":"anypointmq","id":"780187","children":[],"title":"Anypointmq Object"},{"parent":"665307","name":"nats","id":"122205","children":[],"title":"Nats Object"},{"parent":"665307","name":"jms","id":"279791","children":[],"title":"Jms Object"},{"parent":"665307","name":"sns","id":"577094","children":[],"title":"Sns Object"},{"parent":"665307","name":"sqs","id":"48264","children":[],"title":"Sqs Object"},{"parent":"665307","name":"stomp","id":"903357","children":[],"title":"Stomp Object"},{"parent":"665307","name":"redis","id":"780967","children":[],"title":"Redis Object"},{"parent":"665307","name":"ibmmq","id":"452555","children":[],"title":"Ibmmq Object"},{"parent":"665307","name":"solace","id":"36755","children":[],"title":"Solace Object"},{"parent":"665307","name":"googlepubsub","id":"243221","children":[],"title":"Googlepubsub Object"},{"parent":"665307","name":"pulsar","id":"268036","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"577307","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"964319","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"OperationTrait Object"}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"922346","name":"Reference","id":"186106","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"186106","name":"$ref","id":"967687","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"922346","name":"operationTrait","id":"446435","children":[{"type":"string","parent":"446435","name":"summary","id":"423814","children":[],"title":"Summary Object"},{"type":"string","parent":"446435","name":"description","id":"767783","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"446435","name":"tags","id":"50342","children":[{"type":"string","parent":"50342","name":"name","id":"997832","children":[],"title":"Name Object"},{"type":"string","parent":"50342","name":"description","id":"212186","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"50342","name":"externalDocs","id":"225095","children":[{"type":"string","parent":"225095","name":"description","id":"877124","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"225095","name":"url","id":"762201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"225095","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"84015","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"50342","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"784734","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"446435","name":"externalDocs","id":"348356","children":[{"type":"string","parent":"348356","name":"description","id":"670934","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"348356","name":"url","id":"895925","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"348356","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"514995","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"446435","name":"operationId","id":"991190","children":[],"title":"OperationId Object"},{"type":"array","parent":"446435","name":"security","id":"960349","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"960349","name":"array","title":"Array Object","id":"32192","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"446435","name":"bindings","id":"466609","children":[{"parent":"466609","name":"http","id":"912831","children":[],"title":"Http Object"},{"parent":"466609","name":"ws","id":"93044","children":[],"title":"Ws Object"},{"parent":"466609","name":"amqp","id":"628991","children":[],"title":"Amqp Object"},{"parent":"466609","name":"amqp1","id":"398871","children":[],"title":"Amqp1 Object"},{"parent":"466609","name":"mqtt","id":"950525","children":[],"title":"Mqtt Object"},{"parent":"466609","name":"mqtt5","id":"567511","children":[],"title":"Mqtt5 Object"},{"parent":"466609","name":"kafka","id":"490020","children":[],"title":"Kafka Object"},{"parent":"466609","name":"anypointmq","id":"172869","children":[],"title":"Anypointmq Object"},{"parent":"466609","name":"nats","id":"466813","children":[],"title":"Nats Object"},{"parent":"466609","name":"jms","id":"384182","children":[],"title":"Jms Object"},{"parent":"466609","name":"sns","id":"201742","children":[],"title":"Sns Object"},{"parent":"466609","name":"sqs","id":"614509","children":[],"title":"Sqs Object"},{"parent":"466609","name":"stomp","id":"938593","children":[],"title":"Stomp Object"},{"parent":"466609","name":"redis","id":"766283","children":[],"title":"Redis Object"},{"parent":"466609","name":"ibmmq","id":"265665","children":[],"title":"Ibmmq Object"},{"parent":"466609","name":"solace","id":"850704","children":[],"title":"Solace Object"},{"parent":"466609","name":"googlepubsub","id":"434021","children":[],"title":"Googlepubsub Object"},{"parent":"466609","name":"pulsar","id":"406218","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"446435","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"195305","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Traits Object"},{"type":"string","parent":"384088","name":"summary","id":"268246","children":[],"title":"Summary Object"},{"type":"string","parent":"384088","name":"description","id":"657493","children":[],"title":"Description Object"},{"type":"array","parent":"384088","name":"security","id":"11198","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"11198","name":"array","title":"Array Object","id":"336292","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"type":"array","uniqueItems":true,"parent":"384088","name":"tags","id":"279366","children":[{"type":"string","parent":"279366","name":"name","id":"122664","children":[],"title":"Name Object"},{"type":"string","parent":"279366","name":"description","id":"145431","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"279366","name":"externalDocs","id":"822357","children":[{"type":"string","parent":"822357","name":"description","id":"345924","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"822357","name":"url","id":"324795","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"822357","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"941017","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"279366","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"330043","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"384088","name":"externalDocs","id":"207723","children":[{"type":"string","parent":"207723","name":"description","id":"661562","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"207723","name":"url","id":"243552","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"207723","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"754408","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"384088","name":"operationId","id":"953709","children":[],"title":"OperationId Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"384088","name":"bindings","id":"406853","children":[{"parent":"406853","name":"http","id":"453392","children":[],"title":"Http Object"},{"parent":"406853","name":"ws","id":"352090","children":[],"title":"Ws Object"},{"parent":"406853","name":"amqp","id":"15467","children":[],"title":"Amqp Object"},{"parent":"406853","name":"amqp1","id":"179961","children":[],"title":"Amqp1 Object"},{"parent":"406853","name":"mqtt","id":"997137","children":[],"title":"Mqtt Object"},{"parent":"406853","name":"mqtt5","id":"299866","children":[],"title":"Mqtt5 Object"},{"parent":"406853","name":"kafka","id":"785224","children":[],"title":"Kafka Object"},{"parent":"406853","name":"anypointmq","id":"391445","children":[],"title":"Anypointmq Object"},{"parent":"406853","name":"nats","id":"228840","children":[],"title":"Nats Object"},{"parent":"406853","name":"jms","id":"613257","children":[],"title":"Jms Object"},{"parent":"406853","name":"sns","id":"105338","children":[],"title":"Sns Object"},{"parent":"406853","name":"sqs","id":"401224","children":[],"title":"Sqs Object"},{"parent":"406853","name":"stomp","id":"622225","children":[],"title":"Stomp Object"},{"parent":"406853","name":"redis","id":"802217","children":[],"title":"Redis Object"},{"parent":"406853","name":"ibmmq","id":"898683","children":[],"title":"Ibmmq Object"},{"parent":"406853","name":"solace","id":"305651","children":[],"title":"Solace Object"},{"parent":"406853","name":"googlepubsub","id":"96051","children":[],"title":"Googlepubsub Object"},{"parent":"406853","name":"pulsar","id":"367339","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/message.json","parent":"384088","name":"message","id":"681353","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"681353","name":"Reference","id":"7925","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"7925","name":"$ref","id":"166606","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"title":"Message Object","description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"384088","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"625501","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Operation Object","description":{"raw":"Describes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received.\n\nFor example, an operation might describe a chat application use case where a user sends a text message to a group. A publish operation describes messages that are received by the chat application, whereas a subscribe operation describes messages that are sent by the chat application.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)]| A declaration of which security mechanisms are associated with this operation. Only one of the security requirement objects MUST be satisfied to authorize an operation. In cases where Server Security also applies, it MUST also be satisfied.\n<a name=\"operationObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject) &#124; [Reference Object](#referenceObject) ] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [Message Object](#messageObject) &#124; [Reference Object](#referenceObject) &#124; Map[\"oneOf\", [[Message Object](#messageObject) &#124; [Reference Object](#referenceObject)]] | A definition of the message that will be published or received by this operation. Map containing a single `oneOf` key is allowed here to specify multiple messages. However, **a message MUST be valid only against one of the message objects.**\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Operation Object Example":{"raw":"```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"security\": [\n    {\n     \"petstore_auth\": [\n       \"write:pets\",\n       \"read:pets\"\n     ]\n    }\n  ],\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\nsecurity:\n  - petstore_auth:\n    - write:pets\n    - read:pets\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/operation.json","parent":"207305","name":"subscribe","id":"188771","children":[{"type":"array","parent":"188771","name":"traits","id":"516528","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"516528","name":"Reference","id":"781817","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"781817","name":"$ref","id":"437008","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"516528","name":"operationTrait","id":"774625","children":[{"type":"string","parent":"774625","name":"summary","id":"816786","children":[],"title":"Summary Object"},{"type":"string","parent":"774625","name":"description","id":"957026","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"774625","name":"tags","id":"479921","children":[{"type":"string","parent":"479921","name":"name","id":"492015","children":[],"title":"Name Object"},{"type":"string","parent":"479921","name":"description","id":"102347","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"479921","name":"externalDocs","id":"454569","children":[{"type":"string","parent":"454569","name":"description","id":"363559","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"454569","name":"url","id":"778558","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"454569","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"295027","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"479921","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"436136","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"774625","name":"externalDocs","id":"806869","children":[{"type":"string","parent":"806869","name":"description","id":"842715","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"806869","name":"url","id":"749177","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"806869","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"599787","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"774625","name":"operationId","id":"433597","children":[],"title":"OperationId Object"},{"type":"array","parent":"774625","name":"security","id":"115535","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"115535","name":"array","title":"Array Object","id":"634667","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"774625","name":"bindings","id":"276146","children":[{"parent":"276146","name":"http","id":"254426","children":[],"title":"Http Object"},{"parent":"276146","name":"ws","id":"700130","children":[],"title":"Ws Object"},{"parent":"276146","name":"amqp","id":"616218","children":[],"title":"Amqp Object"},{"parent":"276146","name":"amqp1","id":"649184","children":[],"title":"Amqp1 Object"},{"parent":"276146","name":"mqtt","id":"475955","children":[],"title":"Mqtt Object"},{"parent":"276146","name":"mqtt5","id":"640609","children":[],"title":"Mqtt5 Object"},{"parent":"276146","name":"kafka","id":"759020","children":[],"title":"Kafka Object"},{"parent":"276146","name":"anypointmq","id":"475511","children":[],"title":"Anypointmq Object"},{"parent":"276146","name":"nats","id":"666081","children":[],"title":"Nats Object"},{"parent":"276146","name":"jms","id":"690945","children":[],"title":"Jms Object"},{"parent":"276146","name":"sns","id":"50027","children":[],"title":"Sns Object"},{"parent":"276146","name":"sqs","id":"941765","children":[],"title":"Sqs Object"},{"parent":"276146","name":"stomp","id":"517693","children":[],"title":"Stomp Object"},{"parent":"276146","name":"redis","id":"241398","children":[],"title":"Redis Object"},{"parent":"276146","name":"ibmmq","id":"626585","children":[],"title":"Ibmmq Object"},{"parent":"276146","name":"solace","id":"898041","children":[],"title":"Solace Object"},{"parent":"276146","name":"googlepubsub","id":"462040","children":[],"title":"Googlepubsub Object"},{"parent":"276146","name":"pulsar","id":"568271","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"774625","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"325628","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"OperationTrait Object"}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"922346","name":"Reference","id":"186106","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"186106","name":"$ref","id":"967687","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"922346","name":"operationTrait","id":"446435","children":[{"type":"string","parent":"446435","name":"summary","id":"423814","children":[],"title":"Summary Object"},{"type":"string","parent":"446435","name":"description","id":"767783","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"446435","name":"tags","id":"50342","children":[{"type":"string","parent":"50342","name":"name","id":"997832","children":[],"title":"Name Object"},{"type":"string","parent":"50342","name":"description","id":"212186","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"50342","name":"externalDocs","id":"225095","children":[{"type":"string","parent":"225095","name":"description","id":"877124","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"225095","name":"url","id":"762201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"225095","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"84015","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"50342","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"784734","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"446435","name":"externalDocs","id":"348356","children":[{"type":"string","parent":"348356","name":"description","id":"670934","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"348356","name":"url","id":"895925","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"348356","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"514995","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"446435","name":"operationId","id":"991190","children":[],"title":"OperationId Object"},{"type":"array","parent":"446435","name":"security","id":"960349","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"960349","name":"array","title":"Array Object","id":"32192","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"446435","name":"bindings","id":"466609","children":[{"parent":"466609","name":"http","id":"912831","children":[],"title":"Http Object"},{"parent":"466609","name":"ws","id":"93044","children":[],"title":"Ws Object"},{"parent":"466609","name":"amqp","id":"628991","children":[],"title":"Amqp Object"},{"parent":"466609","name":"amqp1","id":"398871","children":[],"title":"Amqp1 Object"},{"parent":"466609","name":"mqtt","id":"950525","children":[],"title":"Mqtt Object"},{"parent":"466609","name":"mqtt5","id":"567511","children":[],"title":"Mqtt5 Object"},{"parent":"466609","name":"kafka","id":"490020","children":[],"title":"Kafka Object"},{"parent":"466609","name":"anypointmq","id":"172869","children":[],"title":"Anypointmq Object"},{"parent":"466609","name":"nats","id":"466813","children":[],"title":"Nats Object"},{"parent":"466609","name":"jms","id":"384182","children":[],"title":"Jms Object"},{"parent":"466609","name":"sns","id":"201742","children":[],"title":"Sns Object"},{"parent":"466609","name":"sqs","id":"614509","children":[],"title":"Sqs Object"},{"parent":"466609","name":"stomp","id":"938593","children":[],"title":"Stomp Object"},{"parent":"466609","name":"redis","id":"766283","children":[],"title":"Redis Object"},{"parent":"466609","name":"ibmmq","id":"265665","children":[],"title":"Ibmmq Object"},{"parent":"466609","name":"solace","id":"850704","children":[],"title":"Solace Object"},{"parent":"466609","name":"googlepubsub","id":"434021","children":[],"title":"Googlepubsub Object"},{"parent":"466609","name":"pulsar","id":"406218","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"446435","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"195305","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Traits Object"},{"type":"string","parent":"188771","name":"summary","id":"913189","children":[],"title":"Summary Object"},{"type":"string","parent":"188771","name":"description","id":"555969","children":[],"title":"Description Object"},{"type":"array","parent":"188771","name":"security","id":"95277","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"95277","name":"array","title":"Array Object","id":"525985","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"type":"array","uniqueItems":true,"parent":"188771","name":"tags","id":"102769","children":[{"type":"string","parent":"102769","name":"name","id":"668192","children":[],"title":"Name Object"},{"type":"string","parent":"102769","name":"description","id":"111109","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"102769","name":"externalDocs","id":"996235","children":[{"type":"string","parent":"996235","name":"description","id":"633741","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"996235","name":"url","id":"136685","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"996235","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"581874","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"102769","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"134592","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"188771","name":"externalDocs","id":"206853","children":[{"type":"string","parent":"206853","name":"description","id":"819065","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"206853","name":"url","id":"620411","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"206853","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"679982","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"188771","name":"operationId","id":"15980","children":[],"title":"OperationId Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"188771","name":"bindings","id":"164378","children":[{"parent":"164378","name":"http","id":"809128","children":[],"title":"Http Object"},{"parent":"164378","name":"ws","id":"218831","children":[],"title":"Ws Object"},{"parent":"164378","name":"amqp","id":"66723","children":[],"title":"Amqp Object"},{"parent":"164378","name":"amqp1","id":"381698","children":[],"title":"Amqp1 Object"},{"parent":"164378","name":"mqtt","id":"768482","children":[],"title":"Mqtt Object"},{"parent":"164378","name":"mqtt5","id":"830913","children":[],"title":"Mqtt5 Object"},{"parent":"164378","name":"kafka","id":"97216","children":[],"title":"Kafka Object"},{"parent":"164378","name":"anypointmq","id":"32654","children":[],"title":"Anypointmq Object"},{"parent":"164378","name":"nats","id":"345073","children":[],"title":"Nats Object"},{"parent":"164378","name":"jms","id":"867587","children":[],"title":"Jms Object"},{"parent":"164378","name":"sns","id":"126008","children":[],"title":"Sns Object"},{"parent":"164378","name":"sqs","id":"450578","children":[],"title":"Sqs Object"},{"parent":"164378","name":"stomp","id":"713919","children":[],"title":"Stomp Object"},{"parent":"164378","name":"redis","id":"71457","children":[],"title":"Redis Object"},{"parent":"164378","name":"ibmmq","id":"211670","children":[],"title":"Ibmmq Object"},{"parent":"164378","name":"solace","id":"993227","children":[],"title":"Solace Object"},{"parent":"164378","name":"googlepubsub","id":"163168","children":[],"title":"Googlepubsub Object"},{"parent":"164378","name":"pulsar","id":"526446","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/message.json","parent":"188771","name":"message","id":"899509","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"899509","name":"Reference","id":"915426","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"915426","name":"$ref","id":"74770","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"title":"Message Object","description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"188771","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"855630","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Subscribe Object"},{"type":"boolean","default":false,"parent":"207305","name":"deprecated","id":"952611","children":[],"title":"Deprecated Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"207305","name":"bindings","id":"62968","children":[{"parent":"62968","name":"http","id":"215449","children":[],"title":"Http Object"},{"parent":"62968","name":"ws","id":"289320","children":[],"title":"Ws Object"},{"parent":"62968","name":"amqp","id":"569346","children":[],"title":"Amqp Object"},{"parent":"62968","name":"amqp1","id":"29928","children":[],"title":"Amqp1 Object"},{"parent":"62968","name":"mqtt","id":"188605","children":[],"title":"Mqtt Object"},{"parent":"62968","name":"mqtt5","id":"593242","children":[],"title":"Mqtt5 Object"},{"parent":"62968","name":"kafka","id":"353513","children":[],"title":"Kafka Object"},{"parent":"62968","name":"anypointmq","id":"441506","children":[],"title":"Anypointmq Object"},{"parent":"62968","name":"nats","id":"930944","children":[],"title":"Nats Object"},{"parent":"62968","name":"jms","id":"601963","children":[],"title":"Jms Object"},{"parent":"62968","name":"sns","id":"490948","children":[],"title":"Sns Object"},{"parent":"62968","name":"sqs","id":"362472","children":[],"title":"Sqs Object"},{"parent":"62968","name":"stomp","id":"160741","children":[],"title":"Stomp Object"},{"parent":"62968","name":"redis","id":"671287","children":[],"title":"Redis Object"},{"parent":"62968","name":"ibmmq","id":"391249","children":[],"title":"Ibmmq Object"},{"parent":"62968","name":"solace","id":"604939","children":[],"title":"Solace Object"},{"parent":"62968","name":"googlepubsub","id":"856293","children":[],"title":"Googlepubsub Object"},{"parent":"62968","name":"pulsar","id":"520151","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"}],"title":"Channels Object","description":{"raw":"Holds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n"},"Channels Object Example":{"raw":"```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/components.json","parent":1,"name":"components","id":"339398","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schemas.json","parent":"339398","name":"schemas","id":"490878","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"490878","name":"schema#","id":"937156","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"414185","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"490878","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"484014","name":"additionalProperties","parent":"490878","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"640967","name":"items","parent":"490878","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"47174","name":"allOf","parent":"490878","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"910007","name":"anyOf","parent":"490878","title":"AnyOf Object","children":[]},{"id":"386814","name":"not","parent":"490878","title":"Not Object","children":[]},{"type":"object","default":{},"id":"946688","name":"properties","parent":"490878","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"521176","name":"patternProperties","parent":"490878","title":"PatternProperties Object","children":[]},{"id":"309708","name":"propertyNames","parent":"490878","title":"PropertyNames Object","children":[]},{"id":"214119","name":"contains","parent":"490878","title":"Contains Object","children":[]},{"type":"string","id":"833325","name":"discriminator","parent":"490878","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"10970","name":"externalDocs","parent":"490878","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"10970","name":"description","id":"991833","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"10970","name":"url","id":"104009","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"10970","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"448067","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"315302","name":"deprecated","parent":"490878","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/servers.json","parent":"339398","name":"servers","id":"414469","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"414469","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"499875","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"499875","name":"$ref","id":"7861","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/server.json","parent":"414469","name":"server","title":"Server Object","description":{"raw":"An object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`, `googlepubsub`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)]] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of servers.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Server Object Example":{"raw":"A single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:development\",\n          \"description\": \"This environment is meant for developers to run their own tests\"\n        }\n      ]\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:staging\",\n          \"description\": \"This environment is a replica of the production environment\"\n        }\n      ]\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\",\n      \"tags\": [\n        { \n          \"name\": \"env:production\",\n          \"description\": \"This environment is the live environment available for final users\"\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:development\"\n        description: \"This environment is meant for developers to run their own tests\"\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:staging\"\n        description: \"This environment is a replica of the production environment\"\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n    tags:\n      - name: \"env:production\"\n        description: \"This environment is the live environment available for final users\"\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n"}},"id":"417883","children":[{"type":"string","parent":"417883","name":"url","id":"825732","children":[],"title":"Url Object"},{"type":"string","parent":"417883","name":"description","id":"578513","children":[],"title":"Description Object"},{"type":"string","description":"The transfer protocol.","parent":"417883","name":"protocol","id":"676305","children":[],"title":"Protocol Object"},{"type":"string","parent":"417883","name":"protocolVersion","id":"941523","children":[],"title":"ProtocolVersion Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/serverVariables.json","parent":"417883","name":"variables","id":"221067","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"221067","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"479905","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"479905","name":"$ref","id":"64953","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/serverVariable.json","parent":"221067","name":"serverVariable","title":"Server Variable Object","description":{"raw":"An object representing a Server Variable for server URL template substitution.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n"}},"id":"603245","children":[{"type":"string","uniqueItems":true,"parent":"603245","name":"enum","id":"537481","children":[],"title":"Enum Object"},{"type":"string","parent":"603245","name":"default","id":"34743","children":[],"title":"Default Object"},{"type":"string","parent":"603245","name":"description","id":"110321","children":[],"title":"Description Object"},{"type":"string","parent":"603245","name":"examples","id":"107034","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"603245","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"532010","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Variables Object"},{"type":"array","parent":"417883","name":"security","id":"379571","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"379571","name":"array","title":"Array Object","id":"624073","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"417883","name":"bindings","id":"596500","children":[{"parent":"596500","name":"http","id":"70495","children":[],"title":"Http Object"},{"parent":"596500","name":"ws","id":"556054","children":[],"title":"Ws Object"},{"parent":"596500","name":"amqp","id":"225058","children":[],"title":"Amqp Object"},{"parent":"596500","name":"amqp1","id":"993435","children":[],"title":"Amqp1 Object"},{"parent":"596500","name":"mqtt","id":"487088","children":[],"title":"Mqtt Object"},{"parent":"596500","name":"mqtt5","id":"667261","children":[],"title":"Mqtt5 Object"},{"parent":"596500","name":"kafka","id":"77470","children":[],"title":"Kafka Object"},{"parent":"596500","name":"anypointmq","id":"587350","children":[],"title":"Anypointmq Object"},{"parent":"596500","name":"nats","id":"57763","children":[],"title":"Nats Object"},{"parent":"596500","name":"jms","id":"392690","children":[],"title":"Jms Object"},{"parent":"596500","name":"sns","id":"311784","children":[],"title":"Sns Object"},{"parent":"596500","name":"sqs","id":"139419","children":[],"title":"Sqs Object"},{"parent":"596500","name":"stomp","id":"616640","children":[],"title":"Stomp Object"},{"parent":"596500","name":"redis","id":"950204","children":[],"title":"Redis Object"},{"parent":"596500","name":"ibmmq","id":"34042","children":[],"title":"Ibmmq Object"},{"parent":"596500","name":"solace","id":"226791","children":[],"title":"Solace Object"},{"parent":"596500","name":"googlepubsub","id":"331513","children":[],"title":"Googlepubsub Object"},{"parent":"596500","name":"pulsar","id":"788024","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"type":"array","uniqueItems":true,"parent":"417883","name":"tags","id":"149998","children":[{"type":"string","parent":"149998","name":"name","id":"39394","children":[],"title":"Name Object"},{"type":"string","parent":"149998","name":"description","id":"843063","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"149998","name":"externalDocs","id":"997778","children":[{"type":"string","parent":"997778","name":"description","id":"622823","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"997778","name":"url","id":"368575","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"997778","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"480756","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"149998","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"713335","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"417883","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"302616","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Servers Object","description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/channels.json","parent":"339398","name":"channels","id":"156647","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"156647","name":"$ref","id":"716292","children":[],"title":"$ref Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/parameters.json","parent":"156647","name":"parameters","id":"499940","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"499940","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"311093","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"311093","name":"$ref","id":"138715","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/parameter.json","parent":"499940","name":"parameter","title":"Parameter Object","description":{"raw":"Describes a parameter included in a channel name.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Parameter Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}},"id":"468106","children":[{"type":"string","description":"A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.","parent":"468106","name":"description","id":"623605","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"468106","name":"schema","id":"480276","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"480276","name":"schema#","id":"657079","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"191558","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"480276","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"173569","name":"additionalProperties","parent":"480276","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"463067","name":"items","parent":"480276","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"696216","name":"allOf","parent":"480276","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"522370","name":"oneOf","parent":"480276","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"81345","name":"anyOf","parent":"480276","title":"AnyOf Object","children":[]},{"id":"157772","name":"not","parent":"480276","title":"Not Object","children":[]},{"type":"object","default":{},"id":"598916","name":"properties","parent":"480276","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"76597","name":"patternProperties","parent":"480276","title":"PatternProperties Object","children":[]},{"id":"639674","name":"propertyNames","parent":"480276","title":"PropertyNames Object","children":[]},{"id":"459730","name":"contains","parent":"480276","title":"Contains Object","children":[]},{"type":"string","id":"27957","name":"discriminator","parent":"480276","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"379411","name":"externalDocs","parent":"480276","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"379411","name":"description","id":"253047","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"379411","name":"url","id":"773449","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"379411","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"447690","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"22291","name":"deprecated","parent":"480276","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"type":"string","description":"A runtime expression that specifies the location of the parameter value","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"468106","name":"location","id":"390831","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"468106","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"806371","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Parameters Object","description":{"raw":"Describes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n"},"Parameters Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n"}}},{"type":"string","description":"A description of the channel.","parent":"156647","name":"description","id":"980888","children":[],"title":"Description Object"},{"type":"string","description":{"raw":"The Servers Object is a map of [Server Objects](#serverObject).\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n"},"Servers Object Example":{"raw":"```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n"}},"uniqueItems":true,"parent":"156647","name":"servers","id":"532083","children":[],"title":"Servers Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/operation.json","parent":"156647","name":"publish","id":"257890","children":[{"type":"array","parent":"257890","name":"traits","id":"978236","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"978236","name":"Reference","id":"673861","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"673861","name":"$ref","id":"806984","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"978236","name":"operationTrait","id":"859660","children":[{"type":"string","parent":"859660","name":"summary","id":"736206","children":[],"title":"Summary Object"},{"type":"string","parent":"859660","name":"description","id":"450152","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"859660","name":"tags","id":"794383","children":[{"type":"string","parent":"794383","name":"name","id":"649971","children":[],"title":"Name Object"},{"type":"string","parent":"794383","name":"description","id":"501899","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"794383","name":"externalDocs","id":"406985","children":[{"type":"string","parent":"406985","name":"description","id":"226999","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"406985","name":"url","id":"998277","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"406985","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"616665","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"794383","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"398307","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"859660","name":"externalDocs","id":"250097","children":[{"type":"string","parent":"250097","name":"description","id":"811524","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"250097","name":"url","id":"736078","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"250097","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"894977","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"859660","name":"operationId","id":"158097","children":[],"title":"OperationId Object"},{"type":"array","parent":"859660","name":"security","id":"26473","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"26473","name":"array","title":"Array Object","id":"545053","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"859660","name":"bindings","id":"500914","children":[{"parent":"500914","name":"http","id":"80613","children":[],"title":"Http Object"},{"parent":"500914","name":"ws","id":"100170","children":[],"title":"Ws Object"},{"parent":"500914","name":"amqp","id":"944639","children":[],"title":"Amqp Object"},{"parent":"500914","name":"amqp1","id":"28062","children":[],"title":"Amqp1 Object"},{"parent":"500914","name":"mqtt","id":"631553","children":[],"title":"Mqtt Object"},{"parent":"500914","name":"mqtt5","id":"804885","children":[],"title":"Mqtt5 Object"},{"parent":"500914","name":"kafka","id":"500850","children":[],"title":"Kafka Object"},{"parent":"500914","name":"anypointmq","id":"473046","children":[],"title":"Anypointmq Object"},{"parent":"500914","name":"nats","id":"45068","children":[],"title":"Nats Object"},{"parent":"500914","name":"jms","id":"323032","children":[],"title":"Jms Object"},{"parent":"500914","name":"sns","id":"180194","children":[],"title":"Sns Object"},{"parent":"500914","name":"sqs","id":"682543","children":[],"title":"Sqs Object"},{"parent":"500914","name":"stomp","id":"582959","children":[],"title":"Stomp Object"},{"parent":"500914","name":"redis","id":"494300","children":[],"title":"Redis Object"},{"parent":"500914","name":"ibmmq","id":"247395","children":[],"title":"Ibmmq Object"},{"parent":"500914","name":"solace","id":"197337","children":[],"title":"Solace Object"},{"parent":"500914","name":"googlepubsub","id":"153483","children":[],"title":"Googlepubsub Object"},{"parent":"500914","name":"pulsar","id":"599286","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"859660","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"393085","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"OperationTrait Object"}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"922346","name":"Reference","id":"186106","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"186106","name":"$ref","id":"967687","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"922346","name":"operationTrait","id":"446435","children":[{"type":"string","parent":"446435","name":"summary","id":"423814","children":[],"title":"Summary Object"},{"type":"string","parent":"446435","name":"description","id":"767783","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"446435","name":"tags","id":"50342","children":[{"type":"string","parent":"50342","name":"name","id":"997832","children":[],"title":"Name Object"},{"type":"string","parent":"50342","name":"description","id":"212186","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"50342","name":"externalDocs","id":"225095","children":[{"type":"string","parent":"225095","name":"description","id":"877124","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"225095","name":"url","id":"762201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"225095","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"84015","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"50342","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"784734","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"446435","name":"externalDocs","id":"348356","children":[{"type":"string","parent":"348356","name":"description","id":"670934","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"348356","name":"url","id":"895925","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"348356","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"514995","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"446435","name":"operationId","id":"991190","children":[],"title":"OperationId Object"},{"type":"array","parent":"446435","name":"security","id":"960349","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"960349","name":"array","title":"Array Object","id":"32192","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"446435","name":"bindings","id":"466609","children":[{"parent":"466609","name":"http","id":"912831","children":[],"title":"Http Object"},{"parent":"466609","name":"ws","id":"93044","children":[],"title":"Ws Object"},{"parent":"466609","name":"amqp","id":"628991","children":[],"title":"Amqp Object"},{"parent":"466609","name":"amqp1","id":"398871","children":[],"title":"Amqp1 Object"},{"parent":"466609","name":"mqtt","id":"950525","children":[],"title":"Mqtt Object"},{"parent":"466609","name":"mqtt5","id":"567511","children":[],"title":"Mqtt5 Object"},{"parent":"466609","name":"kafka","id":"490020","children":[],"title":"Kafka Object"},{"parent":"466609","name":"anypointmq","id":"172869","children":[],"title":"Anypointmq Object"},{"parent":"466609","name":"nats","id":"466813","children":[],"title":"Nats Object"},{"parent":"466609","name":"jms","id":"384182","children":[],"title":"Jms Object"},{"parent":"466609","name":"sns","id":"201742","children":[],"title":"Sns Object"},{"parent":"466609","name":"sqs","id":"614509","children":[],"title":"Sqs Object"},{"parent":"466609","name":"stomp","id":"938593","children":[],"title":"Stomp Object"},{"parent":"466609","name":"redis","id":"766283","children":[],"title":"Redis Object"},{"parent":"466609","name":"ibmmq","id":"265665","children":[],"title":"Ibmmq Object"},{"parent":"466609","name":"solace","id":"850704","children":[],"title":"Solace Object"},{"parent":"466609","name":"googlepubsub","id":"434021","children":[],"title":"Googlepubsub Object"},{"parent":"466609","name":"pulsar","id":"406218","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"446435","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"195305","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Traits Object"},{"type":"string","parent":"257890","name":"summary","id":"13107","children":[],"title":"Summary Object"},{"type":"string","parent":"257890","name":"description","id":"394385","children":[],"title":"Description Object"},{"type":"array","parent":"257890","name":"security","id":"629025","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"629025","name":"array","title":"Array Object","id":"31718","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"type":"array","uniqueItems":true,"parent":"257890","name":"tags","id":"844873","children":[{"type":"string","parent":"844873","name":"name","id":"552735","children":[],"title":"Name Object"},{"type":"string","parent":"844873","name":"description","id":"854257","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"844873","name":"externalDocs","id":"105914","children":[{"type":"string","parent":"105914","name":"description","id":"69954","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"105914","name":"url","id":"578632","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"105914","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"76518","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"844873","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"60117","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"257890","name":"externalDocs","id":"539366","children":[{"type":"string","parent":"539366","name":"description","id":"264778","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"539366","name":"url","id":"109630","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"539366","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"816109","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"257890","name":"operationId","id":"790931","children":[],"title":"OperationId Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"257890","name":"bindings","id":"143121","children":[{"parent":"143121","name":"http","id":"333195","children":[],"title":"Http Object"},{"parent":"143121","name":"ws","id":"677599","children":[],"title":"Ws Object"},{"parent":"143121","name":"amqp","id":"343118","children":[],"title":"Amqp Object"},{"parent":"143121","name":"amqp1","id":"122771","children":[],"title":"Amqp1 Object"},{"parent":"143121","name":"mqtt","id":"694045","children":[],"title":"Mqtt Object"},{"parent":"143121","name":"mqtt5","id":"359369","children":[],"title":"Mqtt5 Object"},{"parent":"143121","name":"kafka","id":"696698","children":[],"title":"Kafka Object"},{"parent":"143121","name":"anypointmq","id":"721286","children":[],"title":"Anypointmq Object"},{"parent":"143121","name":"nats","id":"527919","children":[],"title":"Nats Object"},{"parent":"143121","name":"jms","id":"801011","children":[],"title":"Jms Object"},{"parent":"143121","name":"sns","id":"402234","children":[],"title":"Sns Object"},{"parent":"143121","name":"sqs","id":"477882","children":[],"title":"Sqs Object"},{"parent":"143121","name":"stomp","id":"319763","children":[],"title":"Stomp Object"},{"parent":"143121","name":"redis","id":"794962","children":[],"title":"Redis Object"},{"parent":"143121","name":"ibmmq","id":"305889","children":[],"title":"Ibmmq Object"},{"parent":"143121","name":"solace","id":"269200","children":[],"title":"Solace Object"},{"parent":"143121","name":"googlepubsub","id":"110890","children":[],"title":"Googlepubsub Object"},{"parent":"143121","name":"pulsar","id":"288209","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/message.json","parent":"257890","name":"message","id":"551348","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"551348","name":"Reference","id":"683996","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"683996","name":"$ref","id":"307431","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"title":"Message Object","description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"257890","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"587577","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Operation Object","description":{"raw":"Describes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received.\n\nFor example, an operation might describe a chat application use case where a user sends a text message to a group. A publish operation describes messages that are received by the chat application, whereas a subscribe operation describes messages that are sent by the chat application.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)]| A declaration of which security mechanisms are associated with this operation. Only one of the security requirement objects MUST be satisfied to authorize an operation. In cases where Server Security also applies, it MUST also be satisfied.\n<a name=\"operationObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject) &#124; [Reference Object](#referenceObject) ] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [Message Object](#messageObject) &#124; [Reference Object](#referenceObject) &#124; Map[\"oneOf\", [[Message Object](#messageObject) &#124; [Reference Object](#referenceObject)]] | A definition of the message that will be published or received by this operation. Map containing a single `oneOf` key is allowed here to specify multiple messages. However, **a message MUST be valid only against one of the message objects.**\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Operation Object Example":{"raw":"```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"security\": [\n    {\n     \"petstore_auth\": [\n       \"write:pets\",\n       \"read:pets\"\n     ]\n    }\n  ],\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\nsecurity:\n  - petstore_auth:\n    - write:pets\n    - read:pets\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/operation.json","parent":"156647","name":"subscribe","id":"846501","children":[{"type":"array","parent":"846501","name":"traits","id":"922346","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"922346","name":"Reference","id":"186106","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"186106","name":"$ref","id":"967687","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"922346","name":"operationTrait","id":"446435","children":[{"type":"string","parent":"446435","name":"summary","id":"423814","children":[],"title":"Summary Object"},{"type":"string","parent":"446435","name":"description","id":"767783","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"446435","name":"tags","id":"50342","children":[{"type":"string","parent":"50342","name":"name","id":"997832","children":[],"title":"Name Object"},{"type":"string","parent":"50342","name":"description","id":"212186","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"50342","name":"externalDocs","id":"225095","children":[{"type":"string","parent":"225095","name":"description","id":"877124","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"225095","name":"url","id":"762201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"225095","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"84015","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"50342","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"784734","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"446435","name":"externalDocs","id":"348356","children":[{"type":"string","parent":"348356","name":"description","id":"670934","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"348356","name":"url","id":"895925","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"348356","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"514995","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"446435","name":"operationId","id":"991190","children":[],"title":"OperationId Object"},{"type":"array","parent":"446435","name":"security","id":"960349","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"960349","name":"array","title":"Array Object","id":"32192","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"446435","name":"bindings","id":"466609","children":[{"parent":"466609","name":"http","id":"912831","children":[],"title":"Http Object"},{"parent":"466609","name":"ws","id":"93044","children":[],"title":"Ws Object"},{"parent":"466609","name":"amqp","id":"628991","children":[],"title":"Amqp Object"},{"parent":"466609","name":"amqp1","id":"398871","children":[],"title":"Amqp1 Object"},{"parent":"466609","name":"mqtt","id":"950525","children":[],"title":"Mqtt Object"},{"parent":"466609","name":"mqtt5","id":"567511","children":[],"title":"Mqtt5 Object"},{"parent":"466609","name":"kafka","id":"490020","children":[],"title":"Kafka Object"},{"parent":"466609","name":"anypointmq","id":"172869","children":[],"title":"Anypointmq Object"},{"parent":"466609","name":"nats","id":"466813","children":[],"title":"Nats Object"},{"parent":"466609","name":"jms","id":"384182","children":[],"title":"Jms Object"},{"parent":"466609","name":"sns","id":"201742","children":[],"title":"Sns Object"},{"parent":"466609","name":"sqs","id":"614509","children":[],"title":"Sqs Object"},{"parent":"466609","name":"stomp","id":"938593","children":[],"title":"Stomp Object"},{"parent":"466609","name":"redis","id":"766283","children":[],"title":"Redis Object"},{"parent":"466609","name":"ibmmq","id":"265665","children":[],"title":"Ibmmq Object"},{"parent":"466609","name":"solace","id":"850704","children":[],"title":"Solace Object"},{"parent":"466609","name":"googlepubsub","id":"434021","children":[],"title":"Googlepubsub Object"},{"parent":"466609","name":"pulsar","id":"406218","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"446435","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"195305","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"OperationTrait Object"}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"922346","name":"Reference","id":"186106","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"186106","name":"$ref","id":"967687","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/operationTrait.json","parent":"922346","name":"operationTrait","id":"446435","children":[{"type":"string","parent":"446435","name":"summary","id":"423814","children":[],"title":"Summary Object"},{"type":"string","parent":"446435","name":"description","id":"767783","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"446435","name":"tags","id":"50342","children":[{"type":"string","parent":"50342","name":"name","id":"997832","children":[],"title":"Name Object"},{"type":"string","parent":"50342","name":"description","id":"212186","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"50342","name":"externalDocs","id":"225095","children":[{"type":"string","parent":"225095","name":"description","id":"877124","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"225095","name":"url","id":"762201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"225095","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"84015","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"50342","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"784734","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"446435","name":"externalDocs","id":"348356","children":[{"type":"string","parent":"348356","name":"description","id":"670934","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"348356","name":"url","id":"895925","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"348356","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"514995","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"446435","name":"operationId","id":"991190","children":[],"title":"OperationId Object"},{"type":"array","parent":"446435","name":"security","id":"960349","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"960349","name":"array","title":"Array Object","id":"32192","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"446435","name":"bindings","id":"466609","children":[{"parent":"466609","name":"http","id":"912831","children":[],"title":"Http Object"},{"parent":"466609","name":"ws","id":"93044","children":[],"title":"Ws Object"},{"parent":"466609","name":"amqp","id":"628991","children":[],"title":"Amqp Object"},{"parent":"466609","name":"amqp1","id":"398871","children":[],"title":"Amqp1 Object"},{"parent":"466609","name":"mqtt","id":"950525","children":[],"title":"Mqtt Object"},{"parent":"466609","name":"mqtt5","id":"567511","children":[],"title":"Mqtt5 Object"},{"parent":"466609","name":"kafka","id":"490020","children":[],"title":"Kafka Object"},{"parent":"466609","name":"anypointmq","id":"172869","children":[],"title":"Anypointmq Object"},{"parent":"466609","name":"nats","id":"466813","children":[],"title":"Nats Object"},{"parent":"466609","name":"jms","id":"384182","children":[],"title":"Jms Object"},{"parent":"466609","name":"sns","id":"201742","children":[],"title":"Sns Object"},{"parent":"466609","name":"sqs","id":"614509","children":[],"title":"Sqs Object"},{"parent":"466609","name":"stomp","id":"938593","children":[],"title":"Stomp Object"},{"parent":"466609","name":"redis","id":"766283","children":[],"title":"Redis Object"},{"parent":"466609","name":"ibmmq","id":"265665","children":[],"title":"Ibmmq Object"},{"parent":"466609","name":"solace","id":"850704","children":[],"title":"Solace Object"},{"parent":"466609","name":"googlepubsub","id":"434021","children":[],"title":"Googlepubsub Object"},{"parent":"466609","name":"pulsar","id":"406218","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"446435","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"195305","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Traits Object"},{"type":"string","parent":"846501","name":"summary","id":"385755","children":[],"title":"Summary Object"},{"type":"string","parent":"846501","name":"description","id":"607295","children":[],"title":"Description Object"},{"type":"array","parent":"846501","name":"security","id":"559417","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"559417","name":"array","title":"Array Object","id":"680660","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"type":"array","uniqueItems":true,"parent":"846501","name":"tags","id":"607530","children":[{"type":"string","parent":"607530","name":"name","id":"677717","children":[],"title":"Name Object"},{"type":"string","parent":"607530","name":"description","id":"555283","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"607530","name":"externalDocs","id":"203860","children":[{"type":"string","parent":"203860","name":"description","id":"166050","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"203860","name":"url","id":"446627","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"203860","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"548122","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"607530","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"421567","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"846501","name":"externalDocs","id":"259916","children":[{"type":"string","parent":"259916","name":"description","id":"750366","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"259916","name":"url","id":"954592","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"259916","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"219965","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"846501","name":"operationId","id":"617793","children":[],"title":"OperationId Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"846501","name":"bindings","id":"431465","children":[{"parent":"431465","name":"http","id":"114021","children":[],"title":"Http Object"},{"parent":"431465","name":"ws","id":"760265","children":[],"title":"Ws Object"},{"parent":"431465","name":"amqp","id":"681677","children":[],"title":"Amqp Object"},{"parent":"431465","name":"amqp1","id":"352137","children":[],"title":"Amqp1 Object"},{"parent":"431465","name":"mqtt","id":"367522","children":[],"title":"Mqtt Object"},{"parent":"431465","name":"mqtt5","id":"128236","children":[],"title":"Mqtt5 Object"},{"parent":"431465","name":"kafka","id":"868301","children":[],"title":"Kafka Object"},{"parent":"431465","name":"anypointmq","id":"783916","children":[],"title":"Anypointmq Object"},{"parent":"431465","name":"nats","id":"20255","children":[],"title":"Nats Object"},{"parent":"431465","name":"jms","id":"421826","children":[],"title":"Jms Object"},{"parent":"431465","name":"sns","id":"102447","children":[],"title":"Sns Object"},{"parent":"431465","name":"sqs","id":"627903","children":[],"title":"Sqs Object"},{"parent":"431465","name":"stomp","id":"275910","children":[],"title":"Stomp Object"},{"parent":"431465","name":"redis","id":"25913","children":[],"title":"Redis Object"},{"parent":"431465","name":"ibmmq","id":"979345","children":[],"title":"Ibmmq Object"},{"parent":"431465","name":"solace","id":"491055","children":[],"title":"Solace Object"},{"parent":"431465","name":"googlepubsub","id":"948488","children":[],"title":"Googlepubsub Object"},{"parent":"431465","name":"pulsar","id":"510935","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/message.json","parent":"846501","name":"message","id":"873950","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"873950","name":"Reference","id":"885739","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"885739","name":"$ref","id":"677652","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}}],"title":"Message Object","description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"846501","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"962844","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Subscribe Object"},{"type":"boolean","default":false,"parent":"156647","name":"deprecated","id":"303760","children":[],"title":"Deprecated Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"156647","name":"bindings","id":"690356","children":[{"parent":"690356","name":"http","id":"334954","children":[],"title":"Http Object"},{"parent":"690356","name":"ws","id":"9214","children":[],"title":"Ws Object"},{"parent":"690356","name":"amqp","id":"168621","children":[],"title":"Amqp Object"},{"parent":"690356","name":"amqp1","id":"592025","children":[],"title":"Amqp1 Object"},{"parent":"690356","name":"mqtt","id":"1694","children":[],"title":"Mqtt Object"},{"parent":"690356","name":"mqtt5","id":"915374","children":[],"title":"Mqtt5 Object"},{"parent":"690356","name":"kafka","id":"693480","children":[],"title":"Kafka Object"},{"parent":"690356","name":"anypointmq","id":"717117","children":[],"title":"Anypointmq Object"},{"parent":"690356","name":"nats","id":"952771","children":[],"title":"Nats Object"},{"parent":"690356","name":"jms","id":"708063","children":[],"title":"Jms Object"},{"parent":"690356","name":"sns","id":"717511","children":[],"title":"Sns Object"},{"parent":"690356","name":"sqs","id":"459829","children":[],"title":"Sqs Object"},{"parent":"690356","name":"stomp","id":"961989","children":[],"title":"Stomp Object"},{"parent":"690356","name":"redis","id":"168284","children":[],"title":"Redis Object"},{"parent":"690356","name":"ibmmq","id":"759518","children":[],"title":"Ibmmq Object"},{"parent":"690356","name":"solace","id":"953541","children":[],"title":"Solace Object"},{"parent":"690356","name":"googlepubsub","id":"832916","children":[],"title":"Googlepubsub Object"},{"parent":"690356","name":"pulsar","id":"285763","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"}],"title":"Channels Object","description":{"raw":"Holds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n"},"Channels Object Example":{"raw":"```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/serverVariables.json","parent":"339398","name":"serverVariables","id":"985443","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"985443","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"769555","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"769555","name":"$ref","id":"562712","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/serverVariable.json","parent":"985443","name":"serverVariable","title":"Server Variable Object","description":{"raw":"An object representing a Server Variable for server URL template substitution.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n"}},"id":"112098","children":[{"type":"string","uniqueItems":true,"parent":"112098","name":"enum","id":"583986","children":[],"title":"Enum Object"},{"type":"string","parent":"112098","name":"default","id":"5879","children":[],"title":"Default Object"},{"type":"string","parent":"112098","name":"description","id":"983519","children":[],"title":"Description Object"},{"type":"string","parent":"112098","name":"examples","id":"390752","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"112098","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"965425","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"ServerVariables Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/messages.json","parent":"339398","name":"messages","id":"547270","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"547270","name":"Reference","id":"75365","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"75365","name":"$ref","id":"95949","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"type":"object","additionalProperties":false,"parent":"547270","name":"message","id":"930572","children":[{"type":"string","parent":"930572","name":"schemaFormat","id":"667538","children":[],"title":"SchemaFormat Object"},{"type":"string","parent":"930572","name":"contentType","id":"359287","children":[],"title":"ContentType Object"},{"parent":"930572","name":"headers","id":"1336","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"1336","name":"schema","id":"943215","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"943215","name":"schema#","id":"812590","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"943686","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"943215","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"745509","name":"additionalProperties","parent":"943215","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"675449","name":"items","parent":"943215","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"424248","name":"allOf","parent":"943215","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"144774","name":"oneOf","parent":"943215","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"272893","name":"anyOf","parent":"943215","title":"AnyOf Object","children":[]},{"id":"451153","name":"not","parent":"943215","title":"Not Object","children":[]},{"type":"object","default":{},"id":"579673","name":"properties","parent":"943215","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"679979","name":"patternProperties","parent":"943215","title":"PatternProperties Object","children":[]},{"id":"127624","name":"propertyNames","parent":"943215","title":"PropertyNames Object","children":[]},{"id":"969421","name":"contains","parent":"943215","title":"Contains Object","children":[]},{"type":"string","id":"722360","name":"discriminator","parent":"943215","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"326998","name":"externalDocs","parent":"943215","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"326998","name":"description","id":"548418","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"326998","name":"url","id":"660743","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"326998","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"579890","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"375817","name":"deprecated","parent":"943215","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"const":"object","id":"372513","name":"type","parent":"1336","title":"Type Object","children":[]}],"title":"Headers Object"},{"type":"string","parent":"930572","name":"messageId","id":"727707","children":[],"title":"MessageId Object"},{"parent":"930572","name":"payload","id":"789570","children":[],"title":"Payload Object"},{"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"407525","name":"Reference","id":"798838","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"798838","name":"$ref","id":"551604","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"407525","name":"correlationId","id":"878044","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"878044","name":"description","id":"784093","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"878044","name":"location","id":"664984","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"878044","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"297038","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"407525","name":"Reference","id":"798838","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"798838","name":"$ref","id":"551604","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"407525","name":"correlationId","id":"878044","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"878044","name":"description","id":"784093","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"878044","name":"location","id":"664984","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"878044","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"297038","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"CorrelationId Object"}],"parent":"930572","name":"correlationId","id":"407525","title":"CorrelationId Object"},{"type":"array","uniqueItems":true,"parent":"930572","name":"tags","id":"78578","children":[{"type":"string","parent":"78578","name":"name","id":"514500","children":[],"title":"Name Object"},{"type":"string","parent":"78578","name":"description","id":"188066","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"78578","name":"externalDocs","id":"796637","children":[{"type":"string","parent":"796637","name":"description","id":"945037","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"796637","name":"url","id":"446979","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"796637","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"731930","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"78578","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"774191","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"type":"string","description":"A brief summary of the message.","parent":"930572","name":"summary","id":"301296","children":[],"title":"Summary Object"},{"type":"string","description":"Name of the message.","parent":"930572","name":"name","id":"610240","children":[],"title":"Name Object"},{"type":"string","description":"A human-friendly title for the message.","parent":"930572","name":"title","id":"613450","children":[],"title":"Title Object"},{"type":"string","description":"A longer description of the message. CommonMark is allowed.","parent":"930572","name":"description","id":"433357","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"930572","name":"externalDocs","id":"402439","children":[{"type":"string","parent":"402439","name":"description","id":"520095","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"402439","name":"url","id":"754755","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"402439","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"949531","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"boolean","default":false,"parent":"930572","name":"deprecated","id":"217578","children":[],"title":"Deprecated Object"},{"type":"object","parent":"930572","name":"examples","id":"404707","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"930572","name":"bindings","id":"20807","children":[{"parent":"20807","name":"http","id":"492816","children":[],"title":"Http Object"},{"parent":"20807","name":"ws","id":"721729","children":[],"title":"Ws Object"},{"parent":"20807","name":"amqp","id":"959341","children":[],"title":"Amqp Object"},{"parent":"20807","name":"amqp1","id":"269385","children":[],"title":"Amqp1 Object"},{"parent":"20807","name":"mqtt","id":"738750","children":[],"title":"Mqtt Object"},{"parent":"20807","name":"mqtt5","id":"274225","children":[],"title":"Mqtt5 Object"},{"parent":"20807","name":"kafka","id":"512261","children":[],"title":"Kafka Object"},{"parent":"20807","name":"anypointmq","id":"497278","children":[],"title":"Anypointmq Object"},{"parent":"20807","name":"nats","id":"234306","children":[],"title":"Nats Object"},{"parent":"20807","name":"jms","id":"375595","children":[],"title":"Jms Object"},{"parent":"20807","name":"sns","id":"73978","children":[],"title":"Sns Object"},{"parent":"20807","name":"sqs","id":"658912","children":[],"title":"Sqs Object"},{"parent":"20807","name":"stomp","id":"410056","children":[],"title":"Stomp Object"},{"parent":"20807","name":"redis","id":"434792","children":[],"title":"Redis Object"},{"parent":"20807","name":"ibmmq","id":"970641","children":[],"title":"Ibmmq Object"},{"parent":"20807","name":"solace","id":"572883","children":[],"title":"Solace Object"},{"parent":"20807","name":"googlepubsub","id":"532188","children":[],"title":"Googlepubsub Object"},{"parent":"20807","name":"pulsar","id":"929997","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"type":"array","parent":"930572","name":"traits","id":"749779","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"749779","name":"Reference","id":"204916","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"204916","name":"$ref","id":"404490","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/messageTrait.json","parent":"749779","name":"messageTrait","id":"110025","children":[{"type":"string","parent":"110025","name":"schemaFormat","id":"329760","children":[],"title":"SchemaFormat Object"},{"type":"string","parent":"110025","name":"contentType","id":"956630","children":[],"title":"ContentType Object"},{"parent":"110025","name":"headers","id":"140759","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"140759","name":"schema","id":"319504","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"319504","name":"schema#","id":"822198","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"506511","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"319504","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"134315","name":"additionalProperties","parent":"319504","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"941857","name":"items","parent":"319504","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"824263","name":"allOf","parent":"319504","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"183182","name":"oneOf","parent":"319504","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"11963","name":"anyOf","parent":"319504","title":"AnyOf Object","children":[]},{"id":"233137","name":"not","parent":"319504","title":"Not Object","children":[]},{"type":"object","default":{},"id":"208441","name":"properties","parent":"319504","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"464442","name":"patternProperties","parent":"319504","title":"PatternProperties Object","children":[]},{"id":"844661","name":"propertyNames","parent":"319504","title":"PropertyNames Object","children":[]},{"id":"394340","name":"contains","parent":"319504","title":"Contains Object","children":[]},{"type":"string","id":"18705","name":"discriminator","parent":"319504","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"244815","name":"externalDocs","parent":"319504","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"244815","name":"description","id":"677238","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"244815","name":"url","id":"502208","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"244815","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"663069","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"813706","name":"deprecated","parent":"319504","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"const":"object","id":"8120","name":"type","parent":"140759","title":"Type Object","children":[]}],"title":"Headers Object"},{"type":"string","parent":"110025","name":"messageId","id":"180903","children":[],"title":"MessageId Object"},{"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"633453","name":"Reference","id":"991116","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"991116","name":"$ref","id":"769909","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"633453","name":"correlationId","id":"441345","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"441345","name":"description","id":"270407","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"441345","name":"location","id":"970976","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"441345","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"365394","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"858920","name":"Reference","id":"342084","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"342084","name":"$ref","id":"276845","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"858920","name":"correlationId","id":"380482","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"380482","name":"description","id":"791954","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"380482","name":"location","id":"69792","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"380482","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"657957","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"CorrelationId Object"}],"parent":"110025","name":"correlationId","id":"858920","title":"CorrelationId Object"},{"type":"array","uniqueItems":true,"parent":"110025","name":"tags","id":"208067","children":[{"type":"string","parent":"208067","name":"name","id":"446746","children":[],"title":"Name Object"},{"type":"string","parent":"208067","name":"description","id":"193540","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"208067","name":"externalDocs","id":"22144","children":[{"type":"string","parent":"22144","name":"description","id":"346376","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"22144","name":"url","id":"259201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"22144","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"813048","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"208067","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"828706","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"type":"string","description":"A brief summary of the message.","parent":"110025","name":"summary","id":"188687","children":[],"title":"Summary Object"},{"type":"string","description":"Name of the message.","parent":"110025","name":"name","id":"139580","children":[],"title":"Name Object"},{"type":"string","description":"A human-friendly title for the message.","parent":"110025","name":"title","id":"797878","children":[],"title":"Title Object"},{"type":"string","description":"A longer description of the message. CommonMark is allowed.","parent":"110025","name":"description","id":"90671","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"110025","name":"externalDocs","id":"738675","children":[{"type":"string","parent":"738675","name":"description","id":"107236","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"738675","name":"url","id":"89613","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"738675","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"808493","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"boolean","default":false,"parent":"110025","name":"deprecated","id":"905969","children":[],"title":"Deprecated Object"},{"type":"object","parent":"110025","name":"examples","id":"354908","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"110025","name":"bindings","id":"963198","children":[{"parent":"963198","name":"http","id":"154017","children":[],"title":"Http Object"},{"parent":"963198","name":"ws","id":"196264","children":[],"title":"Ws Object"},{"parent":"963198","name":"amqp","id":"602179","children":[],"title":"Amqp Object"},{"parent":"963198","name":"amqp1","id":"642468","children":[],"title":"Amqp1 Object"},{"parent":"963198","name":"mqtt","id":"30004","children":[],"title":"Mqtt Object"},{"parent":"963198","name":"mqtt5","id":"769226","children":[],"title":"Mqtt5 Object"},{"parent":"963198","name":"kafka","id":"67105","children":[],"title":"Kafka Object"},{"parent":"963198","name":"anypointmq","id":"172745","children":[],"title":"Anypointmq Object"},{"parent":"963198","name":"nats","id":"853630","children":[],"title":"Nats Object"},{"parent":"963198","name":"jms","id":"570487","children":[],"title":"Jms Object"},{"parent":"963198","name":"sns","id":"751295","children":[],"title":"Sns Object"},{"parent":"963198","name":"sqs","id":"587707","children":[],"title":"Sqs Object"},{"parent":"963198","name":"stomp","id":"599667","children":[],"title":"Stomp Object"},{"parent":"963198","name":"redis","id":"129547","children":[],"title":"Redis Object"},{"parent":"963198","name":"ibmmq","id":"180841","children":[],"title":"Ibmmq Object"},{"parent":"963198","name":"solace","id":"52366","children":[],"title":"Solace Object"},{"parent":"963198","name":"googlepubsub","id":"329504","children":[],"title":"Googlepubsub Object"},{"parent":"963198","name":"pulsar","id":"301754","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"110025","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"302034","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"MessageTrait Object"}],"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"749779","name":"Reference","id":"204916","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"204916","name":"$ref","id":"404490","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/messageTrait.json","parent":"749779","name":"messageTrait","id":"110025","children":[{"type":"string","parent":"110025","name":"schemaFormat","id":"329760","children":[],"title":"SchemaFormat Object"},{"type":"string","parent":"110025","name":"contentType","id":"956630","children":[],"title":"ContentType Object"},{"parent":"110025","name":"headers","id":"140759","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"140759","name":"schema","id":"319504","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"319504","name":"schema#","id":"822198","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"506511","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"319504","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"134315","name":"additionalProperties","parent":"319504","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"941857","name":"items","parent":"319504","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"824263","name":"allOf","parent":"319504","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"183182","name":"oneOf","parent":"319504","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"11963","name":"anyOf","parent":"319504","title":"AnyOf Object","children":[]},{"id":"233137","name":"not","parent":"319504","title":"Not Object","children":[]},{"type":"object","default":{},"id":"208441","name":"properties","parent":"319504","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"464442","name":"patternProperties","parent":"319504","title":"PatternProperties Object","children":[]},{"id":"844661","name":"propertyNames","parent":"319504","title":"PropertyNames Object","children":[]},{"id":"394340","name":"contains","parent":"319504","title":"Contains Object","children":[]},{"type":"string","id":"18705","name":"discriminator","parent":"319504","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"244815","name":"externalDocs","parent":"319504","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"244815","name":"description","id":"677238","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"244815","name":"url","id":"502208","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"244815","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"663069","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"813706","name":"deprecated","parent":"319504","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"const":"object","id":"8120","name":"type","parent":"140759","title":"Type Object","children":[]}],"title":"Headers Object"},{"type":"string","parent":"110025","name":"messageId","id":"180903","children":[],"title":"MessageId Object"},{"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"633453","name":"Reference","id":"991116","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"991116","name":"$ref","id":"769909","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"633453","name":"correlationId","id":"441345","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"441345","name":"description","id":"270407","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"441345","name":"location","id":"970976","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"441345","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"365394","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"858920","name":"Reference","id":"342084","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"342084","name":"$ref","id":"276845","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"858920","name":"correlationId","id":"380482","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"380482","name":"description","id":"791954","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"380482","name":"location","id":"69792","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"380482","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"657957","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"CorrelationId Object"}],"parent":"110025","name":"correlationId","id":"858920","title":"CorrelationId Object"},{"type":"array","uniqueItems":true,"parent":"110025","name":"tags","id":"208067","children":[{"type":"string","parent":"208067","name":"name","id":"446746","children":[],"title":"Name Object"},{"type":"string","parent":"208067","name":"description","id":"193540","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"208067","name":"externalDocs","id":"22144","children":[{"type":"string","parent":"22144","name":"description","id":"346376","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"22144","name":"url","id":"259201","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"22144","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"813048","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"208067","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"828706","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"type":"string","description":"A brief summary of the message.","parent":"110025","name":"summary","id":"188687","children":[],"title":"Summary Object"},{"type":"string","description":"Name of the message.","parent":"110025","name":"name","id":"139580","children":[],"title":"Name Object"},{"type":"string","description":"A human-friendly title for the message.","parent":"110025","name":"title","id":"797878","children":[],"title":"Title Object"},{"type":"string","description":"A longer description of the message. CommonMark is allowed.","parent":"110025","name":"description","id":"90671","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"110025","name":"externalDocs","id":"738675","children":[{"type":"string","parent":"738675","name":"description","id":"107236","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"738675","name":"url","id":"89613","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"738675","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"808493","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"boolean","default":false,"parent":"110025","name":"deprecated","id":"905969","children":[],"title":"Deprecated Object"},{"type":"object","parent":"110025","name":"examples","id":"354908","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"110025","name":"bindings","id":"963198","children":[{"parent":"963198","name":"http","id":"154017","children":[],"title":"Http Object"},{"parent":"963198","name":"ws","id":"196264","children":[],"title":"Ws Object"},{"parent":"963198","name":"amqp","id":"602179","children":[],"title":"Amqp Object"},{"parent":"963198","name":"amqp1","id":"642468","children":[],"title":"Amqp1 Object"},{"parent":"963198","name":"mqtt","id":"30004","children":[],"title":"Mqtt Object"},{"parent":"963198","name":"mqtt5","id":"769226","children":[],"title":"Mqtt5 Object"},{"parent":"963198","name":"kafka","id":"67105","children":[],"title":"Kafka Object"},{"parent":"963198","name":"anypointmq","id":"172745","children":[],"title":"Anypointmq Object"},{"parent":"963198","name":"nats","id":"853630","children":[],"title":"Nats Object"},{"parent":"963198","name":"jms","id":"570487","children":[],"title":"Jms Object"},{"parent":"963198","name":"sns","id":"751295","children":[],"title":"Sns Object"},{"parent":"963198","name":"sqs","id":"587707","children":[],"title":"Sqs Object"},{"parent":"963198","name":"stomp","id":"599667","children":[],"title":"Stomp Object"},{"parent":"963198","name":"redis","id":"129547","children":[],"title":"Redis Object"},{"parent":"963198","name":"ibmmq","id":"180841","children":[],"title":"Ibmmq Object"},{"parent":"963198","name":"solace","id":"52366","children":[],"title":"Solace Object"},{"parent":"963198","name":"googlepubsub","id":"329504","children":[],"title":"Googlepubsub Object"},{"parent":"963198","name":"pulsar","id":"301754","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"110025","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"302034","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Traits Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"930572","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"791995","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Message Object","description":{"raw":"Describes a message received on a given channel and operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Schema formats table":{"raw":"The following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.5.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.5.0`, `application/vnd.aai.asyncapi+json;version=2.5.0`, `application/vnd.aai.asyncapi+yaml;version=2.5.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n"},"Message Object Example":{"raw":"```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n"}}}],"title":"Messages Object"},{"type":"object","parent":"339398","name":"securitySchemes","id":"877389","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"877389","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"602015","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"602015","name":"$ref","id":"120687","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityScheme.json","parent":"877389","name":"SecurityScheme","title":"Security Scheme Object","description":{"raw":"Defines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2's common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n* SASL (Simple Authentication and Security Layer) as defined in [RFC4422](https://tools.ietf.org/html/rfc4422).\n\n","Fixed Fields":{"raw":"Field Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"securitySchemeObjectType\"></a>type | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `\"userPassword\"`, `\"apiKey\"`, `\"X509\"`, `\"symmetricEncryption\"`, `\"asymmetricEncryption\"`, `\"httpApiKey\"`, `\"http\"`, `\"oauth2\"`, `\"openIdConnect\"`, `\"plain\"`, `\"scramSha256\"`, `\"scramSha512\"`, and `\"gssapi\"`.\n<a name=\"securitySchemeObjectDescription\"></a>description | `string` | Any | A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"securitySchemeObjectName\"></a>name | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\n<a name=\"securitySchemeObjectIn\"></a>in | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `\"user\"` and `\"password\"` for `apiKey` and `\"query\"`, `\"header\"` or `\"cookie\"` for `httpApiKey`.\n<a name=\"securitySchemeObjectScheme\"></a>scheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\n<a name=\"securitySchemeObjectBearerFormat\"></a>bearerFormat | `string` | `http` (`\"bearer\"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\n<a name=\"securitySchemeFlows\"></a>flows | [OAuth Flows Object](#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\n<a name=\"securitySchemeOpenIdConnectUrl\"></a>openIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Security Scheme Object Example":{"User/Password Authentication Sample":{"raw":"```json\n{\n  \"type\": \"userPassword\"\n}\n```\n\n```yaml\ntype: userPassword\n```\n\n"},"API Key Authentication Sample":{"raw":"```json\n{\n  \"type\": \"apiKey\",\n  \"in\": \"user\"\n}\n```\n\n```yaml\ntype: apiKey,\nin: user\n```\n\n"},"X.509 Authentication Sample":{"raw":"```json\n{\n  \"type\": \"X509\"\n}\n```\n\n```yaml\ntype: X509\n```\n\n"},"End-to-end Encryption Authentication Sample":{"raw":"```json\n{\n  \"type\": \"symmetricEncryption\"\n}\n```\n\n```yaml\ntype: symmetricEncryption\n```\n\n"},"Basic Authentication Sample":{"raw":"```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"basic\"\n}\n```\n\n```yaml\ntype: http\nscheme: basic\n```\n\n"},"API Key Sample":{"raw":"```json\n{\n  \"type\": \"httpApiKey\",\n  \"name\": \"api_key\",\n  \"in\": \"header\"\n}\n```\n\n```yaml\ntype: httpApiKey\nname: api_key\nin: header\n```\n\n"},"JWT Bearer Sample":{"raw":"```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"bearer\",\n  \"bearerFormat\": \"JWT\"\n}\n```\n\n```yaml\ntype: http\nscheme: bearer\nbearerFormat: JWT\n```\n\n"},"Implicit OAuth2 Sample":{"raw":"```json\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```yaml\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n"},"SASL Sample":{"raw":"```json\n{\n  \"type\": \"scramSha512\"\n}\n```\n\n```yaml\ntype: scramSha512\n```\n\n"}}},"id":"834910","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/userPassword.json","parent":"834910","name":"userPassword","id":"93996","children":[{"type":"string","enum":["userPassword"],"parent":"93996","name":"type","id":"331173","children":[],"title":"Type Object"},{"type":"string","parent":"93996","name":"description","id":"796123","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"93996","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"838105","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"UserPassword Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/apiKey.json","parent":"834910","name":"apiKey","id":"835690","children":[{"type":"string","enum":["apiKey"],"parent":"835690","name":"type","id":"247798","children":[],"title":"Type Object"},{"type":"string","enum":["user","password"],"parent":"835690","name":"in","id":"52484","children":[],"title":"In Object"},{"type":"string","parent":"835690","name":"description","id":"645309","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"835690","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"876325","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"ApiKey Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/X509.json","parent":"834910","name":"X509","id":"523446","children":[{"type":"string","enum":["X509"],"parent":"523446","name":"type","id":"683430","children":[],"title":"Type Object"},{"type":"string","parent":"523446","name":"description","id":"426384","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"523446","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"360153","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"X509 Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/symmetricEncryption.json","parent":"834910","name":"symmetricEncryption","id":"87173","children":[{"type":"string","enum":["symmetricEncryption"],"parent":"87173","name":"type","id":"946211","children":[],"title":"Type Object"},{"type":"string","parent":"87173","name":"description","id":"62532","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"87173","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"916509","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"SymmetricEncryption Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/asymmetricEncryption.json","parent":"834910","name":"asymmetricEncryption","id":"154267","children":[{"type":"string","enum":["asymmetricEncryption"],"parent":"154267","name":"type","id":"973333","children":[],"title":"Type Object"},{"type":"string","parent":"154267","name":"description","id":"120292","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"154267","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"611627","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"AsymmetricEncryption Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/HTTPSecurityScheme.json","parent":"834910","name":"HTTPSecurityScheme","id":"172529","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/NonBearerHTTPSecurityScheme.json","parent":"172529","name":"NonBearerHTTPSecurityScheme","id":"110035","children":[{"type":"string","parent":"110035","name":"scheme","id":"656179","children":[],"title":"Scheme Object"},{"type":"string","parent":"110035","name":"description","id":"97318","children":[],"title":"Description Object"},{"type":"string","enum":["http"],"parent":"110035","name":"type","id":"751402","children":[],"title":"Type Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"110035","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"191224","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"NonBearerHTTPSecurityScheme Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/BearerHTTPSecurityScheme.json","parent":"172529","name":"BearerHTTPSecurityScheme","id":"426262","children":[{"type":"string","enum":["bearer"],"parent":"426262","name":"scheme","id":"417694","children":[],"title":"Scheme Object"},{"type":"string","parent":"426262","name":"bearerFormat","id":"909901","children":[],"title":"BearerFormat Object"},{"type":"string","enum":["http"],"parent":"426262","name":"type","id":"562821","children":[],"title":"Type Object"},{"type":"string","parent":"426262","name":"description","id":"641588","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"426262","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"374912","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"BearerHTTPSecurityScheme Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/APIKeyHTTPSecurityScheme.json","parent":"172529","name":"APIKeyHTTPSecurityScheme","id":"817469","children":[{"type":"string","enum":["httpApiKey"],"parent":"817469","name":"type","id":"985631","children":[],"title":"Type Object"},{"type":"string","parent":"817469","name":"name","id":"856839","children":[],"title":"Name Object"},{"type":"string","enum":["header","query","cookie"],"parent":"817469","name":"in","id":"998648","children":[],"title":"In Object"},{"type":"string","parent":"817469","name":"description","id":"253186","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"817469","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"469486","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"APIKeyHTTPSecurityScheme Object"}],"title":"HTTPSecurityScheme Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Flows.json","parent":"834910","name":"oauth2Flows","id":"474570","children":[{"type":"string","enum":["oauth2"],"parent":"474570","name":"type","id":"925912","children":[],"title":"Type Object"},{"type":"string","parent":"474570","name":"description","id":"293180","children":[],"title":"Description Object"},{"type":"object","additionalProperties":false,"parent":"474570","name":"flows","id":"868793","children":[{"parent":"868793","name":"implicit","id":"385432","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Flow.json","parent":"385432","name":"oauth2Flow","id":"535293","children":[{"type":"string","format":"uri","parent":"535293","name":"authorizationUrl","id":"456371","children":[],"title":"AuthorizationUrl Object"},{"type":"string","format":"uri","parent":"535293","name":"tokenUrl","id":"356129","children":[],"title":"TokenUrl Object"},{"type":"string","format":"uri","parent":"535293","name":"refreshUrl","id":"328884","children":[],"title":"RefreshUrl Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Scopes.json","parent":"535293","name":"scopes","id":"377344","children":[],"title":"Scopes Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"535293","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"775644","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Oauth2Flow Object"}],"title":"Implicit Object"},{"parent":"868793","name":"password","id":"345288","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Flow.json","parent":"345288","name":"oauth2Flow","id":"930854","children":[{"type":"string","format":"uri","parent":"930854","name":"authorizationUrl","id":"748516","children":[],"title":"AuthorizationUrl Object"},{"type":"string","format":"uri","parent":"930854","name":"tokenUrl","id":"266551","children":[],"title":"TokenUrl Object"},{"type":"string","format":"uri","parent":"930854","name":"refreshUrl","id":"970435","children":[],"title":"RefreshUrl Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Scopes.json","parent":"930854","name":"scopes","id":"670868","children":[],"title":"Scopes Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"930854","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"999923","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Oauth2Flow Object"}],"title":"Password Object"},{"parent":"868793","name":"clientCredentials","id":"495945","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Flow.json","parent":"495945","name":"oauth2Flow","id":"640833","children":[{"type":"string","format":"uri","parent":"640833","name":"authorizationUrl","id":"138203","children":[],"title":"AuthorizationUrl Object"},{"type":"string","format":"uri","parent":"640833","name":"tokenUrl","id":"318743","children":[],"title":"TokenUrl Object"},{"type":"string","format":"uri","parent":"640833","name":"refreshUrl","id":"185066","children":[],"title":"RefreshUrl Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Scopes.json","parent":"640833","name":"scopes","id":"978157","children":[],"title":"Scopes Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"640833","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"396132","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Oauth2Flow Object"}],"title":"ClientCredentials Object"},{"parent":"868793","name":"authorizationCode","id":"341908","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Flow.json","parent":"341908","name":"oauth2Flow","id":"645749","children":[{"type":"string","format":"uri","parent":"645749","name":"authorizationUrl","id":"699875","children":[],"title":"AuthorizationUrl Object"},{"type":"string","format":"uri","parent":"645749","name":"tokenUrl","id":"237674","children":[],"title":"TokenUrl Object"},{"type":"string","format":"uri","parent":"645749","name":"refreshUrl","id":"988701","children":[],"title":"RefreshUrl Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/oauth2Scopes.json","parent":"645749","name":"scopes","id":"641394","children":[],"title":"Scopes Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"645749","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"148379","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Oauth2Flow Object"}],"title":"AuthorizationCode Object"}],"title":"Flows Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"474570","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"584252","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Oauth2Flows Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/openIdConnect.json","parent":"834910","name":"openIdConnect","id":"738458","children":[{"type":"string","enum":["openIdConnect"],"parent":"738458","name":"type","id":"755857","children":[],"title":"Type Object"},{"type":"string","parent":"738458","name":"description","id":"605431","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"738458","name":"openIdConnectUrl","id":"929149","children":[],"title":"OpenIdConnectUrl Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"738458","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"49344","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"OpenIdConnect Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/SaslSecurityScheme.json","parent":"834910","name":"SaslSecurityScheme","id":"507924","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/SaslPlainSecurityScheme.json","parent":"507924","name":"SaslPlainSecurityScheme","id":"140910","children":[{"type":"string","enum":["plain"],"parent":"140910","name":"type","id":"760891","children":[],"title":"Type Object"},{"type":"string","parent":"140910","name":"description","id":"37757","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"140910","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"872424","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"SaslPlainSecurityScheme Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/SaslScramSecurityScheme.json","parent":"507924","name":"SaslScramSecurityScheme","id":"226800","children":[{"type":"string","enum":["scramSha256","scramSha512"],"parent":"226800","name":"type","id":"790443","children":[],"title":"Type Object"},{"type":"string","parent":"226800","name":"description","id":"744049","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"226800","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"404709","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"SaslScramSecurityScheme Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/SaslGssapiSecurityScheme.json","parent":"507924","name":"SaslGssapiSecurityScheme","id":"685447","children":[{"type":"string","enum":["gssapi"],"parent":"685447","name":"type","id":"552470","children":[],"title":"Type Object"},{"type":"string","parent":"685447","name":"description","id":"209401","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"685447","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"861620","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"SaslGssapiSecurityScheme Object"}],"title":"SaslSecurityScheme Object"}]}],"title":"SecuritySchemes Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/parameters.json","parent":"339398","name":"parameters","id":"529782","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"529782","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"473032","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"473032","name":"$ref","id":"998469","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/parameter.json","parent":"529782","name":"parameter","title":"Parameter Object","description":{"raw":"Describes a parameter included in a channel name.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Parameter Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n"}},"id":"235561","children":[{"type":"string","description":"A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed.","parent":"235561","name":"description","id":"23386","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"235561","name":"schema","id":"898967","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"898967","name":"schema#","id":"179228","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"491236","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"898967","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"557772","name":"additionalProperties","parent":"898967","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"843584","name":"items","parent":"898967","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"270908","name":"allOf","parent":"898967","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"275830","name":"oneOf","parent":"898967","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"366845","name":"anyOf","parent":"898967","title":"AnyOf Object","children":[]},{"id":"818305","name":"not","parent":"898967","title":"Not Object","children":[]},{"type":"object","default":{},"id":"124397","name":"properties","parent":"898967","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"403289","name":"patternProperties","parent":"898967","title":"PatternProperties Object","children":[]},{"id":"344337","name":"propertyNames","parent":"898967","title":"PropertyNames Object","children":[]},{"id":"890981","name":"contains","parent":"898967","title":"Contains Object","children":[]},{"type":"string","id":"231179","name":"discriminator","parent":"898967","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"428492","name":"externalDocs","parent":"898967","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"428492","name":"description","id":"766245","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"428492","name":"url","id":"893820","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"428492","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"177329","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"551140","name":"deprecated","parent":"898967","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"type":"string","description":"A runtime expression that specifies the location of the parameter value","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"235561","name":"location","id":"107043","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"235561","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"970679","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Parameters Object","description":{"raw":"Describes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n"},"Parameters Object Example":{"raw":"```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n"}}},{"type":"object","parent":"339398","name":"correlationIds","id":"805213","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"805213","name":"Reference","title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}},"id":"368784","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"368784","name":"$ref","id":"968542","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"805213","name":"correlationId","title":"CorrelationId Object","id":"953227","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"953227","name":"description","id":"877411","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"953227","name":"location","id":"246950","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"953227","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"769989","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"title":"Correlation ID Object"},{"type":"object","parent":"339398","name":"operationTraits","id":"133625","children":[{"type":"string","parent":"133625","name":"summary","id":"576556","children":[],"title":"Summary Object"},{"type":"string","parent":"133625","name":"description","id":"39293","children":[],"title":"Description Object"},{"type":"array","uniqueItems":true,"parent":"133625","name":"tags","id":"480682","children":[{"type":"string","parent":"480682","name":"name","id":"427859","children":[],"title":"Name Object"},{"type":"string","parent":"480682","name":"description","id":"768939","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"480682","name":"externalDocs","id":"231320","children":[{"type":"string","parent":"231320","name":"description","id":"232347","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"231320","name":"url","id":"282062","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"231320","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"716856","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"480682","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"989903","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"133625","name":"externalDocs","id":"504699","children":[{"type":"string","parent":"504699","name":"description","id":"629018","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"504699","name":"url","id":"997645","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"504699","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"696416","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"string","parent":"133625","name":"operationId","id":"824611","children":[],"title":"OperationId Object"},{"type":"array","parent":"133625","name":"security","id":"436136","children":[{"0":"s","1":"t","2":"r","3":"i","4":"n","5":"g","parent":"436136","name":"array","title":"Array Object","id":"486555","children":[]}],"$ref":"http://asyncapi.com/definitions/2.6.0/SecurityRequirement.json","title":"Security Requirement Object","description":{"raw":"Lists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n","Patterned Fields":{"raw":"Field Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n"},"Security Requirement Object Examples":{"User/Password Security Requirement":{"raw":"```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n"},"API Key Security Requirement":{"raw":"```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n"},"OAuth2 Security Requirement":{"raw":"```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n"}}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"133625","name":"bindings","id":"601185","children":[{"parent":"601185","name":"http","id":"84950","children":[],"title":"Http Object"},{"parent":"601185","name":"ws","id":"646733","children":[],"title":"Ws Object"},{"parent":"601185","name":"amqp","id":"993791","children":[],"title":"Amqp Object"},{"parent":"601185","name":"amqp1","id":"8124","children":[],"title":"Amqp1 Object"},{"parent":"601185","name":"mqtt","id":"784177","children":[],"title":"Mqtt Object"},{"parent":"601185","name":"mqtt5","id":"774827","children":[],"title":"Mqtt5 Object"},{"parent":"601185","name":"kafka","id":"915198","children":[],"title":"Kafka Object"},{"parent":"601185","name":"anypointmq","id":"735426","children":[],"title":"Anypointmq Object"},{"parent":"601185","name":"nats","id":"186820","children":[],"title":"Nats Object"},{"parent":"601185","name":"jms","id":"547274","children":[],"title":"Jms Object"},{"parent":"601185","name":"sns","id":"430907","children":[],"title":"Sns Object"},{"parent":"601185","name":"sqs","id":"19644","children":[],"title":"Sqs Object"},{"parent":"601185","name":"stomp","id":"359776","children":[],"title":"Stomp Object"},{"parent":"601185","name":"redis","id":"188613","children":[],"title":"Redis Object"},{"parent":"601185","name":"ibmmq","id":"360918","children":[],"title":"Ibmmq Object"},{"parent":"601185","name":"solace","id":"373125","children":[],"title":"Solace Object"},{"parent":"601185","name":"googlepubsub","id":"969516","children":[],"title":"Googlepubsub Object"},{"parent":"601185","name":"pulsar","id":"656374","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"}],"title":"Operation Trait Object","description":{"raw":"Describes a trait that MAY be applied to an [Operation Object](#operationObject). This object MAY contain any property from the [Operation Object](#operationObject), except `message` and `traits`.\n\nIf you're looking to apply traits to a message, see the [Message Trait Object](#messageTraitObject).\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"operationTraitObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationTraitObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationTraitObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationTraitObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)]| A declaration of which security mechanisms are associated with this operation. Only one of the security requirement objects MUST be satisfied to authorize an operation. In cases where Server Security also applies, it MUST also be satisfied.\n<a name=\"operationTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of operations.\n<a name=\"operationTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationTraitObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Operation Trait Object Example":{"raw":"```json\n{\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  }\n}\n```\n\n```yaml\nbindings:\n  amqp:\n    ack: false\n```\n\n\n\n\n"}}},{"type":"object","parent":"339398","name":"messageTraits","id":"863018","children":[{"type":"string","parent":"863018","name":"schemaFormat","id":"970354","children":[],"title":"SchemaFormat Object"},{"type":"string","parent":"863018","name":"contentType","id":"370123","children":[],"title":"ContentType Object"},{"parent":"863018","name":"headers","id":"68351","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json","parent":"68351","name":"schema","id":"422330","children":[{"$ref":"http://json-schema.org/draft-07/schema#","parent":"422330","name":"schema#","id":"101120","children":[],"title":"Schema# Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","id":"780969","name":"^x-[\\w\\d\\.\\x2d_]+$","parent":"422330","title":"^x-[\\w\\d\\.\\x2d_]+$ Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"boolean"}],"default":{},"id":"996984","name":"additionalProperties","parent":"422330","title":"AdditionalProperties Object","children":[]},{"anyOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"},{"type":"array","minItems":1,"items":{"$ref":"http://asyncapi.com/definitions/2.6.0/schema.json"}}],"default":{},"id":"299252","name":"items","parent":"422330","title":"Items Object","children":[]},{"type":"array","minItems":1,"id":"22982","name":"allOf","parent":"422330","title":"AllOf Object","children":[]},{"type":"array","minItems":1,"id":"160756","name":"oneOf","parent":"422330","title":"OneOf Object","children":[]},{"type":"array","minItems":1,"id":"17840","name":"anyOf","parent":"422330","title":"AnyOf Object","children":[]},{"id":"978211","name":"not","parent":"422330","title":"Not Object","children":[]},{"type":"object","default":{},"id":"900360","name":"properties","parent":"422330","title":"Properties Object","children":[]},{"type":"object","default":{},"id":"849602","name":"patternProperties","parent":"422330","title":"PatternProperties Object","children":[]},{"id":"239469","name":"propertyNames","parent":"422330","title":"PropertyNames Object","children":[]},{"id":"113524","name":"contains","parent":"422330","title":"Contains Object","children":[]},{"type":"string","id":"74879","name":"discriminator","parent":"422330","title":"Discriminator Object","children":[]},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","id":"877556","name":"externalDocs","parent":"422330","title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}},"children":[{"type":"string","parent":"877556","name":"description","id":"198718","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"877556","name":"url","id":"931242","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"877556","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"207482","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]},{"type":"boolean","default":false,"id":"929443","name":"deprecated","parent":"422330","title":"Deprecated Object","children":[]}],"title":"Schema Object","description":{"raw":"The Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n","Properties":{"raw":"The AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n"},"Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n","Composition and Inheritance (Polymorphism)":{"raw":"The AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n"}},"Schema Object Examples":{"Primitive Sample":{"raw":"```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n"},"Simple Model":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n"},"Model with Map/Dictionary Properties":{"raw":"For a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n"},"Model with Example":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n"},"Model with Boolean Schemas":{"raw":"```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n"},"Models with Composition":{"raw":"```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n"},"Models with Polymorphism Support":{"raw":"```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n"}}}},{"const":"object","id":"721552","name":"type","parent":"68351","title":"Type Object","children":[]}],"title":"Headers Object"},{"type":"string","parent":"863018","name":"messageId","id":"962792","children":[],"title":"MessageId Object"},{"oneOf":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"633453","name":"Reference","id":"991116","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"991116","name":"$ref","id":"769909","children":[],"title":"$ref Object"}]},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"633453","name":"correlationId","id":"441345","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"441345","name":"description","id":"270407","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"441345","name":"location","id":"970976","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"441345","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"365394","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}]}],"children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/Reference.json","parent":"633453","name":"Reference","id":"991116","children":[{"$ref":"http://asyncapi.com/definitions/2.6.0/ReferenceObject.json","parent":"991116","name":"$ref","id":"769909","children":[],"title":"$ref Object"}],"title":"Reference Object","description":{"raw":"A simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **REQUIRED.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n"},"Reference Object Example":{"raw":"```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/correlationId.json","parent":"633453","name":"correlationId","id":"441345","children":[{"type":"string","description":"A optional description of the correlation ID. GitHub Flavored Markdown is allowed.","parent":"441345","name":"description","id":"270407","children":[],"title":"Description Object"},{"type":"string","description":"A runtime expression that specifies the location of the correlation ID","pattern":"^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*","parent":"441345","name":"location","id":"970976","children":[],"title":"Location Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"441345","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"365394","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"CorrelationId Object"}],"parent":"863018","name":"correlationId","id":"633453","title":"CorrelationId Object"},{"type":"array","uniqueItems":true,"parent":"863018","name":"tags","id":"88581","children":[{"type":"string","parent":"88581","name":"name","id":"819553","children":[],"title":"Name Object"},{"type":"string","parent":"88581","name":"description","id":"306188","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"88581","name":"externalDocs","id":"740738","children":[{"type":"string","parent":"740738","name":"description","id":"441617","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"740738","name":"url","id":"417586","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"740738","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"800876","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"88581","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"110300","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"type":"string","description":"A brief summary of the message.","parent":"863018","name":"summary","id":"365810","children":[],"title":"Summary Object"},{"type":"string","description":"Name of the message.","parent":"863018","name":"name","id":"437919","children":[],"title":"Name Object"},{"type":"string","description":"A human-friendly title for the message.","parent":"863018","name":"title","id":"640621","children":[],"title":"Title Object"},{"type":"string","description":"A longer description of the message. CommonMark is allowed.","parent":"863018","name":"description","id":"716385","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"863018","name":"externalDocs","id":"142265","children":[{"type":"string","parent":"142265","name":"description","id":"812190","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"142265","name":"url","id":"511944","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"142265","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"683076","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"type":"boolean","default":false,"parent":"863018","name":"deprecated","id":"388192","children":[],"title":"Deprecated Object"},{"type":"object","parent":"863018","name":"examples","id":"444674","children":[],"title":"Examples Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/bindingsObject.json","parent":"863018","name":"bindings","id":"8399","children":[{"parent":"8399","name":"http","id":"127620","children":[],"title":"Http Object"},{"parent":"8399","name":"ws","id":"344800","children":[],"title":"Ws Object"},{"parent":"8399","name":"amqp","id":"518609","children":[],"title":"Amqp Object"},{"parent":"8399","name":"amqp1","id":"366358","children":[],"title":"Amqp1 Object"},{"parent":"8399","name":"mqtt","id":"510942","children":[],"title":"Mqtt Object"},{"parent":"8399","name":"mqtt5","id":"202780","children":[],"title":"Mqtt5 Object"},{"parent":"8399","name":"kafka","id":"792684","children":[],"title":"Kafka Object"},{"parent":"8399","name":"anypointmq","id":"25563","children":[],"title":"Anypointmq Object"},{"parent":"8399","name":"nats","id":"243539","children":[],"title":"Nats Object"},{"parent":"8399","name":"jms","id":"903147","children":[],"title":"Jms Object"},{"parent":"8399","name":"sns","id":"936165","children":[],"title":"Sns Object"},{"parent":"8399","name":"sqs","id":"465994","children":[],"title":"Sqs Object"},{"parent":"8399","name":"stomp","id":"865216","children":[],"title":"Stomp Object"},{"parent":"8399","name":"redis","id":"117489","children":[],"title":"Redis Object"},{"parent":"8399","name":"ibmmq","id":"841178","children":[],"title":"Ibmmq Object"},{"parent":"8399","name":"solace","id":"976762","children":[],"title":"Solace Object"},{"parent":"8399","name":"googlepubsub","id":"31194","children":[],"title":"Googlepubsub Object"},{"parent":"8399","name":"pulsar","id":"957760","children":[],"title":"Pulsar Object"}],"title":"Bindings Object"}],"title":"Message Trait Object","description":{"raw":"Describes a trait that MAY be applied to a [Message Object](#messageObject). This object MAY contain any property from the [Message Object](#messageObject), except `payload` and `traits`.\n\nIf you're looking to apply traits to an operation, see the [Operation Trait Object](#operationTraitObject).\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageTraitObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageTraitObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageTraitObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageTraitObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format/language used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject).\n<a name=\"messageTraitObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageTraitObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageTraitObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageTraitObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageTraitObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for logical grouping and categorization of messages.\n<a name=\"messageTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageTraitObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageTraitObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Message Trait Object Example":{"raw":"```json\n{\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"contentType\": \"application/json\"\n}\n```\n\n```yaml\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\ncontentType: application/json\n```\n\n"}}},{"type":"object","parent":"339398","name":"serverBindings","id":"964308","children":[{"parent":"964308","name":"http","id":"352023","children":[],"title":"Http Object"},{"parent":"964308","name":"ws","id":"122784","children":[],"title":"Ws Object"},{"parent":"964308","name":"amqp","id":"438676","children":[],"title":"Amqp Object"},{"parent":"964308","name":"amqp1","id":"790268","children":[],"title":"Amqp1 Object"},{"parent":"964308","name":"mqtt","id":"69275","children":[],"title":"Mqtt Object"},{"parent":"964308","name":"mqtt5","id":"334071","children":[],"title":"Mqtt5 Object"},{"parent":"964308","name":"kafka","id":"56578","children":[],"title":"Kafka Object"},{"parent":"964308","name":"anypointmq","id":"23302","children":[],"title":"Anypointmq Object"},{"parent":"964308","name":"nats","id":"538913","children":[],"title":"Nats Object"},{"parent":"964308","name":"jms","id":"525986","children":[],"title":"Jms Object"},{"parent":"964308","name":"sns","id":"379784","children":[],"title":"Sns Object"},{"parent":"964308","name":"sqs","id":"78375","children":[],"title":"Sqs Object"},{"parent":"964308","name":"stomp","id":"770210","children":[],"title":"Stomp Object"},{"parent":"964308","name":"redis","id":"538220","children":[],"title":"Redis Object"},{"parent":"964308","name":"ibmmq","id":"858377","children":[],"title":"Ibmmq Object"},{"parent":"964308","name":"solace","id":"636156","children":[],"title":"Solace Object"},{"parent":"964308","name":"googlepubsub","id":"191060","children":[],"title":"Googlepubsub Object"},{"parent":"964308","name":"pulsar","id":"117520","children":[],"title":"Pulsar Object"}],"title":"Server Bindings Object","description":{"raw":"Map describing protocol-specific definitions for a server.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"serverBindingsObjectHTTP\"></a>`http` | [HTTP Server Binding](https://github.com/asyncapi/bindings/blob/master/http#server) | Protocol-specific information for an HTTP server.\n<a name=\"serverBindingsObjectWebSockets\"></a>`ws` | [WebSockets Server Binding](https://github.com/asyncapi/bindings/blob/master/websockets#server) | Protocol-specific information for a WebSockets server.\n<a name=\"serverBindingsObjectKafka\"></a>`kafka` | [Kafka Server Binding](https://github.com/asyncapi/bindings/blob/master/kafka#server) | Protocol-specific information for a Kafka server.\n<a name=\"serverBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq#server) | Protocol-specific information for an Anypoint MQ server.\n<a name=\"serverBindingsObjectAMQP\"></a>`amqp` | [AMQP Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp#server) | Protocol-specific information for an AMQP 0-9-1 server.\n<a name=\"serverBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp1#server) | Protocol-specific information for an AMQP 1.0 server.\n<a name=\"serverBindingsObjectMQTT\"></a>`mqtt` | [MQTT Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt#server) | Protocol-specific information for an MQTT server.\n<a name=\"serverBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#server) | Protocol-specific information for an MQTT 5 server.\n<a name=\"serverBindingsObjectNATS\"></a>`nats` | [NATS Server Binding](https://github.com/asyncapi/bindings/blob/master/nats#server) | Protocol-specific information for a NATS server.\n<a name=\"serverBindingsObjectJMS\"></a>`jms` | [JMS Server Binding](https://github.com/asyncapi/bindings/blob/master/jms#server) | Protocol-specific information for a JMS server.\n<a name=\"serverBindingsObjectSNS\"></a>`sns` | [SNS Server Binding](https://github.com/asyncapi/bindings/blob/master/sns#server) | Protocol-specific information for an SNS server.\n<a name=\"serverBindingsObjectSolace\"></a>`solace` | [Solace Server Binding](https://github.com/asyncapi/bindings/blob/master/solace#server) | Protocol-specific information for a Solace server.\n<a name=\"serverBindingsObjectSQS\"></a>`sqs` | [SQS Server Binding](https://github.com/asyncapi/bindings/blob/master/sqs#server) | Protocol-specific information for an SQS server.\n<a name=\"serverBindingsObjectSTOMP\"></a>`stomp` | [STOMP Server Binding](https://github.com/asyncapi/bindings/blob/master/stomp#server) | Protocol-specific information for a STOMP server.\n<a name=\"serverBindingsObjectRedis\"></a>`redis` | [Redis Server Binding](https://github.com/asyncapi/bindings/blob/master/redis#server) | Protocol-specific information for a Redis server.\n<a name=\"serverBindingsObjectMercure\"></a>`mercure` | [Mercure Server Binding](https://github.com/asyncapi/bindings/blob/master/mercure#server) | Protocol-specific information for a Mercure server.\n<a name=\"serverBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/ibmmq#server-binding-object) | Protocol-specific information for an IBM MQ server.\n<a name=\"serverBindingsObjectGooglePubSub\"></a>`googlepubsub` | [Google Cloud Pub/Sub Server Binding](https://github.com/asyncapi/bindings/blob/master/googlepubsub#server) | Protocol-specific information for a Google Cloud Pub/Sub server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n"}}},{"type":"object","parent":"339398","name":"channelBindings","id":"120507","children":[{"parent":"120507","name":"http","id":"288797","children":[],"title":"Http Object"},{"parent":"120507","name":"ws","id":"941613","children":[],"title":"Ws Object"},{"parent":"120507","name":"amqp","id":"409101","children":[],"title":"Amqp Object"},{"parent":"120507","name":"amqp1","id":"150408","children":[],"title":"Amqp1 Object"},{"parent":"120507","name":"mqtt","id":"65614","children":[],"title":"Mqtt Object"},{"parent":"120507","name":"mqtt5","id":"983001","children":[],"title":"Mqtt5 Object"},{"parent":"120507","name":"kafka","id":"631830","children":[],"title":"Kafka Object"},{"parent":"120507","name":"anypointmq","id":"381128","children":[],"title":"Anypointmq Object"},{"parent":"120507","name":"nats","id":"489081","children":[],"title":"Nats Object"},{"parent":"120507","name":"jms","id":"370403","children":[],"title":"Jms Object"},{"parent":"120507","name":"sns","id":"284077","children":[],"title":"Sns Object"},{"parent":"120507","name":"sqs","id":"445442","children":[],"title":"Sqs Object"},{"parent":"120507","name":"stomp","id":"131881","children":[],"title":"Stomp Object"},{"parent":"120507","name":"redis","id":"245893","children":[],"title":"Redis Object"},{"parent":"120507","name":"ibmmq","id":"600090","children":[],"title":"Ibmmq Object"},{"parent":"120507","name":"solace","id":"193274","children":[],"title":"Solace Object"},{"parent":"120507","name":"googlepubsub","id":"891516","children":[],"title":"Googlepubsub Object"},{"parent":"120507","name":"pulsar","id":"408035","children":[],"title":"Pulsar Object"}],"title":"Channel Bindings Object","description":{"raw":"Map describing protocol-specific definitions for a channel.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"channelBindingsObjectHTTP\"></a>`http` | [HTTP Channel Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#channel) | Protocol-specific information for an HTTP channel.\n<a name=\"channelBindingsObjectWebSockets\"></a>`ws` | [WebSockets Channel Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#channel) | Protocol-specific information for a WebSockets channel.\n<a name=\"channelBindingsObjectKafka\"></a>`kafka` | [Kafka Channel Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#channel) | Protocol-specific information for a Kafka channel.\n<a name=\"channelBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Channel Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#channel) | Protocol-specific information for an Anypoint MQ channel.\n<a name=\"channelBindingsObjectAMQP\"></a>`amqp` | [AMQP Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#channel) | Protocol-specific information for an AMQP 0-9-1 channel.\n<a name=\"channelBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#channel) | Protocol-specific information for an AMQP 1.0 channel.\n<a name=\"channelBindingsObjectMQTT\"></a>`mqtt` | [MQTT Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#channel) | Protocol-specific information for an MQTT channel.\n<a name=\"channelBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#channel) | Protocol-specific information for an MQTT 5 channel.\n<a name=\"channelBindingsObjectNATS\"></a>`nats` | [NATS Channel Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#channel) | Protocol-specific information for a NATS channel.\n<a name=\"channelBindingsObjectJMS\"></a>`jms` | [JMS Channel Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#channel) | Protocol-specific information for a JMS channel.\n<a name=\"channelBindingsObjectSNS\"></a>`sns` | [SNS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#channel) | Protocol-specific information for an SNS channel.\n<a name=\"channelBindingsObjectSolace\"></a>`solace` | [Solace Channel Binding](https://github.com/asyncapi/bindings/blob/master/solace#channel) | Protocol-specific information for a Solace channel.\n<a name=\"channelBindingsObjectSQS\"></a>`sqs` | [SQS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#channel) | Protocol-specific information for an SQS channel.\n<a name=\"channelBindingsObjectSTOMP\"></a>`stomp` | [STOMP Channel Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#channel) | Protocol-specific information for a STOMP channel.\n<a name=\"channelBindingsObjectRedis\"></a>`redis` | [Redis Channel Binding](https://github.com/asyncapi/bindings/blob/master/redis#channel) | Protocol-specific information for a Redis channel.\n<a name=\"channelBindingsObjectMercure\"></a>`mercure` | [Mercure Channel Binding](https://github.com/asyncapi/bindings/blob/master/mercure#channel) | Protocol-specific information for a Mercure channel.\n<a name=\"channelBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Channel Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#channel-binding-object) | Protocol-specific information for an IBM MQ channel.\n<a name=\"channelBindingsObjectGooglePubSub\"></a>`googlepubsub` | [Google Cloud Pub/Sub Channel Binding](https://github.com/asyncapi/bindings/tree/master/googlepubsub#channel) | Protocol-specific information for a Google Cloud Pub/Sub channel.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n"}}},{"type":"object","parent":"339398","name":"operationBindings","id":"617299","children":[{"parent":"617299","name":"http","id":"642483","children":[],"title":"Http Object"},{"parent":"617299","name":"ws","id":"969353","children":[],"title":"Ws Object"},{"parent":"617299","name":"amqp","id":"386932","children":[],"title":"Amqp Object"},{"parent":"617299","name":"amqp1","id":"933044","children":[],"title":"Amqp1 Object"},{"parent":"617299","name":"mqtt","id":"186344","children":[],"title":"Mqtt Object"},{"parent":"617299","name":"mqtt5","id":"995980","children":[],"title":"Mqtt5 Object"},{"parent":"617299","name":"kafka","id":"439357","children":[],"title":"Kafka Object"},{"parent":"617299","name":"anypointmq","id":"192356","children":[],"title":"Anypointmq Object"},{"parent":"617299","name":"nats","id":"461918","children":[],"title":"Nats Object"},{"parent":"617299","name":"jms","id":"588733","children":[],"title":"Jms Object"},{"parent":"617299","name":"sns","id":"322652","children":[],"title":"Sns Object"},{"parent":"617299","name":"sqs","id":"742772","children":[],"title":"Sqs Object"},{"parent":"617299","name":"stomp","id":"935177","children":[],"title":"Stomp Object"},{"parent":"617299","name":"redis","id":"608199","children":[],"title":"Redis Object"},{"parent":"617299","name":"ibmmq","id":"913685","children":[],"title":"Ibmmq Object"},{"parent":"617299","name":"solace","id":"457051","children":[],"title":"Solace Object"},{"parent":"617299","name":"googlepubsub","id":"182142","children":[],"title":"Googlepubsub Object"},{"parent":"617299","name":"pulsar","id":"482927","children":[],"title":"Pulsar Object"}],"title":"Operation Bindings Object","description":{"raw":"Map describing protocol-specific definitions for an operation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"operationBindingsObjectHTTP\"></a>`http` | [HTTP Operation Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#operation) | Protocol-specific information for an HTTP operation.\n<a name=\"operationBindingsObjectWebSockets\"></a>`ws` | [WebSockets Operation Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#operation) | Protocol-specific information for a WebSockets operation.\n<a name=\"operationBindingsObjectKafka\"></a>`kafka` | [Kafka Operation Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#operation) | Protocol-specific information for a Kafka operation.\n<a name=\"operationBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Operation Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#operation) | Protocol-specific information for an Anypoint MQ operation.\n<a name=\"operationBindingsObjectAMQP\"></a>`amqp` | [AMQP Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#operation) | Protocol-specific information for an AMQP 0-9-1 operation.\n<a name=\"operationBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#operation) | Protocol-specific information for an AMQP 1.0 operation.\n<a name=\"operationBindingsObjectMQTT\"></a>`mqtt` | [MQTT Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#operation) | Protocol-specific information for an MQTT operation.\n<a name=\"operationBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#operation) | Protocol-specific information for an MQTT 5 operation.\n<a name=\"operationBindingsObjectNATS\"></a>`nats` | [NATS Operation Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#operation) | Protocol-specific information for a NATS operation.\n<a name=\"operationBindingsObjectJMS\"></a>`jms` | [JMS Operation Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#operation) | Protocol-specific information for a JMS operation.\n<a name=\"operationBindingsObjectSNS\"></a>`sns` | [SNS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#operation) | Protocol-specific information for an SNS operation.\n<a name=\"operationBindingsObjectSolace\"></a>`solace` | [Solace Operation Binding](https://github.com/asyncapi/bindings/blob/master/solace#operation) | Protocol-specific information for a Solace operation.\n<a name=\"operationBindingsObjectSQS\"></a>`sqs` | [SQS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#operation) | Protocol-specific information for an SQS operation.\n<a name=\"operationBindingsObjectSTOMP\"></a>`stomp` | [STOMP Operation Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#operation) | Protocol-specific information for a STOMP operation.\n<a name=\"operationBindingsObjectRedis\"></a>`redis` | [Redis Operation Binding](https://github.com/asyncapi/bindings/blob/master/redis#operation) | Protocol-specific information for a Redis operation.\n<a name=\"operationBindingsObjectMercure\"></a>`mercure` | [Mercure Operation Binding](https://github.com/asyncapi/bindings/blob/master/mercure#operation) | Protocol-specific information for a Mercure operation.\n<a name=\"operationBindingsObjectGooglePubSub\"></a>`googlepubsub` | [Google Cloud Pub/Sub Operation Binding](https://github.com/asyncapi/bindings/blob/master/googlepubsub#operation) | Protocol-specific information for a Google Cloud Pub/Sub operation.\n<a name=\"operationBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Operation Binding](https://github.com/asyncapi/bindings/blob/master/ibmmq#operation-binding-object) | Protocol-specific information for an IBM MQ operation.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n"}}},{"type":"object","parent":"339398","name":"messageBindings","id":"340193","children":[{"parent":"340193","name":"http","id":"354200","children":[],"title":"Http Object"},{"parent":"340193","name":"ws","id":"428564","children":[],"title":"Ws Object"},{"parent":"340193","name":"amqp","id":"805017","children":[],"title":"Amqp Object"},{"parent":"340193","name":"amqp1","id":"899558","children":[],"title":"Amqp1 Object"},{"parent":"340193","name":"mqtt","id":"500593","children":[],"title":"Mqtt Object"},{"parent":"340193","name":"mqtt5","id":"203758","children":[],"title":"Mqtt5 Object"},{"parent":"340193","name":"kafka","id":"92273","children":[],"title":"Kafka Object"},{"parent":"340193","name":"anypointmq","id":"10316","children":[],"title":"Anypointmq Object"},{"parent":"340193","name":"nats","id":"729175","children":[],"title":"Nats Object"},{"parent":"340193","name":"jms","id":"541595","children":[],"title":"Jms Object"},{"parent":"340193","name":"sns","id":"858074","children":[],"title":"Sns Object"},{"parent":"340193","name":"sqs","id":"316819","children":[],"title":"Sqs Object"},{"parent":"340193","name":"stomp","id":"496674","children":[],"title":"Stomp Object"},{"parent":"340193","name":"redis","id":"334363","children":[],"title":"Redis Object"},{"parent":"340193","name":"ibmmq","id":"203736","children":[],"title":"Ibmmq Object"},{"parent":"340193","name":"solace","id":"335684","children":[],"title":"Solace Object"},{"parent":"340193","name":"googlepubsub","id":"443292","children":[],"title":"Googlepubsub Object"},{"parent":"340193","name":"pulsar","id":"58944","children":[],"title":"Pulsar Object"}],"title":"Message Bindings Object","description":{"raw":"Map describing protocol-specific definitions for a message.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"messageBindingsObjectHTTP\"></a>`http` | [HTTP Message Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#message) | Protocol-specific information for an HTTP message, i.e., a request or a response.\n<a name=\"messageBindingsObjectWebSockets\"></a>`ws` | [WebSockets Message Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#message) | Protocol-specific information for a WebSockets message.\n<a name=\"messageBindingsObjectKafka\"></a>`kafka` | [Kafka Message Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#message) | Protocol-specific information for a Kafka message.\n<a name=\"messageBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Message Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#message) | Protocol-specific information for an Anypoint MQ message.\n<a name=\"messageBindingsObjectAMQP\"></a>`amqp` | [AMQP Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#message) | Protocol-specific information for an AMQP 0-9-1 message.\n<a name=\"messageBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#message) | Protocol-specific information for an AMQP 1.0 message.\n<a name=\"messageBindingsObjectMQTT\"></a>`mqtt` | [MQTT Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#message) | Protocol-specific information for an MQTT message.\n<a name=\"messageBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#message) | Protocol-specific information for an MQTT 5 message.\n<a name=\"messageBindingsObjectNATS\"></a>`nats` | [NATS Message Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#message) | Protocol-specific information for a NATS message.\n<a name=\"messageBindingsObjectJMS\"></a>`jms` | [JMS Message Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#message) | Protocol-specific information for a JMS message.\n<a name=\"messageBindingsObjectSNS\"></a>`sns` | [SNS Message Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#message) | Protocol-specific information for an SNS message.\n<a name=\"messageBindingsObjectSolace\"></a>`solace` | [Solace Server Binding](https://github.com/asyncapi/bindings/blob/master/solace#message) | Protocol-specific information for a Solace message.\n<a name=\"messageBindingsObjectSQS\"></a>`sqs` | [SQS Message Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#message) | Protocol-specific information for an SQS message.\n<a name=\"messageBindingsObjectSTOMP\"></a>`stomp` | [STOMP Message Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#message) | Protocol-specific information for a STOMP message.\n<a name=\"messageBindingsObjectRedis\"></a>`redis` | [Redis Message Binding](https://github.com/asyncapi/bindings/blob/master/redis#message) | Protocol-specific information for a Redis message.\n<a name=\"messageBindingsObjectMercure\"></a>`mercure` | [Mercure Message Binding](https://github.com/asyncapi/bindings/blob/master/mercure#message) | Protocol-specific information for a Mercure message.\n<a name=\"messageBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Message Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#message-binding-object) | Protocol-specific information for an IBM MQ message.\n<a name=\"messageBindingsObjectGooglePubSub\"></a>`googlepubsub` | [Google Cloud Pub/Sub Message Binding](https://github.com/asyncapi/bindings/tree/master/googlepubsub#message) | Protocol-specific information for a Google Cloud Pub/Sub message.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"339398","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"195424","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"Components Object","description":{"raw":"Holds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---|--- \n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsServers\"></a> servers | Map[`string`, [Server Object](#serverObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Objects](#serverObject).\n<a name=\"componentsServerVariables\"></a> serverVariables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Variable Objects](#serverVariableObject). \n<a name=\"componentsChannels\"></a> channels | Map[`string`, [Channel Item Object](#channelItemObject)] | An object to hold reusable [Channel Item Objects](#channelItemObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Server Bindings Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Channel Bindings Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Bindings Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Bindings Objects](#messageBindingsObject).\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n"},"Components Object Example":{"raw":"```json\n{\n  \"components\": {\n    \"schemas\": {\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"servers\": {\n      \"development\": {\n        \"url\": \"{stage}.gigantic-server.com:{port}\",\n        \"description\": \"Development server\",\n        \"protocol\": \"amqp\",\n        \"protocolVersion\": \"0.9.1\",\n        \"variables\": {\n          \"stage\": {\n            \"$ref\": \"#/components/serverVariables/stage\"\n          },\n          \"port\": {\n            \"$ref\": \"#/components/serverVariables/port\"\n          }\n        }\n      }\n    },\n    \"serverVariables\": {\n      \"stage\": {\n        \"default\": \"demo\",\n        \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n      },\n      \"port\": {\n        \"enum\": [\"8883\", \"8884\"],\n        \"default\": \"8883\"\n      }\n    },\n    \"channels\": {\n      \"user/signedup\": {\n        \"subscribe\": {\n          \"message\": {\n            \"$ref\": \"#/components/messages/userSignUp\"\n          }\n        }\n      }\n    },\n    \"messages\": {\n      \"userSignUp\": {\n        \"summary\": \"Action to sign a user up.\",\n        \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n        \"tags\": [\n          {\n            \"name\": \"user\"\n          },\n          {\n            \"name\": \"signup\"\n          }\n        ],\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"applicationInstanceId\": {\n              \"description\": \"Unique identifier for a given instance of the publishing application\",\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"payload\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"user\": {\n              \"$ref\": \"#/components/schemas/userCreate\"\n            },\n            \"signup\": {\n              \"$ref\": \"#/components/schemas/signup\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"correlationIds\": {\n      \"default\": {\n        \"description\": \"Default Correlation ID\",\n        \"location\": \"$message.header#/correlationId\"\n      }\n    },\n    \"messageTraits\": {\n      \"commonHeaders\": {\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"my-app-header\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"maximum\": 100\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  servers:\n    development:\n      url: \"{stage}.gigantic-server.com:{port}\"\n      description: Development server\n      protocol: amqp\n      protocolVersion: 0.9.1\n      variables:\n        stage:\n          $ref: \"#/components/serverVariables/stage\"\n        port:\n          $ref: \"#/components/serverVariables/port\"\n  serverVariables:\n    stage:\n      default: demo\n      description: This value is assigned by the service provider, in this example `gigantic-server.com`\n    port:\n      enum: [8883, 8884]\n      default: 8883\n  channels:\n    user/signedup:\n      subscribe:\n        message:\n          $ref: \"#/components/messages/userSignUp\"\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n"}}},{"type":"array","uniqueItems":true,"parent":1,"name":"tags","id":"934346","children":[{"type":"string","parent":"934346","name":"name","id":"760337","children":[],"title":"Name Object"},{"type":"string","parent":"934346","name":"description","id":"400885","children":[],"title":"Description Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":"934346","name":"externalDocs","id":"37668","children":[{"type":"string","parent":"37668","name":"description","id":"142057","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"37668","name":"url","id":"60766","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"37668","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"763766","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"934346","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"426346","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"$ref":"http://asyncapi.com/definitions/2.6.0/tag.json","title":"Tag Object","description":{"raw":"Allows adding meta data to a single tag.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **REQUIRED.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"Tag Object Example":{"raw":"```json\n{\n    \"name\": \"user\",\n    \"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/externalDocs.json","parent":1,"name":"externalDocs","id":"754511","children":[{"type":"string","parent":"754511","name":"description","id":"716335","children":[],"title":"Description Object"},{"type":"string","format":"uri","parent":"754511","name":"url","id":"862224","children":[],"title":"Url Object"},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":"754511","name":"^x-[\\w\\d\\.\\x2d_]+$","id":"878837","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"External Documentation Object","description":{"raw":"Allows referencing an external resource for extended documentation.\n\n","Fixed Fields":{"raw":"Field Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **REQUIRED.** The URL for the target documentation. This MUST be in the form of an absolute URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n"},"External Documentation Object Example":{"raw":"```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n"}}},{"$ref":"http://asyncapi.com/definitions/2.6.0/specificationExtension.json","parent":1,"name":"^x-[\\w\\d\\.\\x2d_]+$","id":"997437","children":[],"title":"^x-[\\w\\d\\.\\x2d_]+$ Object"}],"title":"AsyncAPI Object","$ref":""}]